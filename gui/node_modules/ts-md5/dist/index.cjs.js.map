{"version":3,"file":"index.cjs.js","sources":["../src/md5.ts","../src/md5_file_hasher.ts","../src/parallel_hasher.ts"],"sourcesContent":["/*\n\nTypeScript Md5\n==============\n\nBased on work by\n* Joseph Myers: http://www.myersdaily.org/joseph/javascript/md5-text.html\n* André Cruz: https://github.com/satazor/SparkMD5\n* Raymond Hill: https://github.com/gorhill/yamd5.js\n\nEffectively a TypeScrypt re-write of Raymond Hill JS Library\n\nThe MIT License (MIT)\n\nCopyright (C) 2014 Raymond Hill\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2015 André Cruz <amdfcruz@gmail.com>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT YOU WANT TO.\n\n\n*/\n\ninterface HasherState {\n    buffer: string;\n    buflen: number;\n    length: number;\n    state: number[];\n}\n\nconst EMPTY_STATE = new Int32Array(4);\n\nexport class Md5 {\n    /**\n     * Hash a UTF-8 string on the spot\n     * @param str String to hash\n     * @param raw Whether to return the value as an `Int32Array`\n     */\n    public static hashStr(str: string, raw?: false): string;\n    public static hashStr(str: string, raw: true): Int32Array;\n    public static hashStr(str: string, raw: boolean = false) {\n        return this.onePassHasher.start().appendStr(str).end(raw);\n    }\n\n    /**\n     * Hash a ASCII string on the spot\n     * @param str String to hash\n     * @param raw Whether to return the value as an `Int32Array`\n     */\n    public static hashAsciiStr(str: string, raw?: false): string;\n    public static hashAsciiStr(str: string, raw: true): Int32Array;\n    public static hashAsciiStr(str: string, raw: boolean = false) {\n        return this.onePassHasher.start().appendAsciiStr(str).end(raw);\n    }\n    // Private Static Variables\n    private static stateIdentity = new Int32Array([\n        1732584193, -271733879, -1732584194, 271733878,\n    ]);\n    private static buffer32Identity = new Int32Array([\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    ]);\n    private static hexChars = '0123456789abcdef';\n    private static hexOut: string[] = [];\n\n    // Permanent instance is to use for one-call hashing\n    private static onePassHasher = new Md5();\n\n    private static _hex(x: Int32Array): string {\n        const hc = Md5.hexChars;\n        const ho = Md5.hexOut;\n        let n;\n        let offset;\n        let j;\n        let i;\n\n        for (i = 0; i < 4; i += 1) {\n            offset = i * 8;\n            n = x[i];\n            for (j = 0; j < 8; j += 2) {\n                ho[offset + 1 + j] = hc.charAt(n & 0x0f);\n                n >>>= 4;\n                ho[offset + 0 + j] = hc.charAt(n & 0x0f);\n                n >>>= 4;\n            }\n        }\n        return ho.join('');\n    }\n\n    private static _md5cycle(\n        x: Int32Array | Uint32Array,\n        k: Int32Array | Uint32Array,\n    ) {\n        let a = x[0];\n        let b = x[1];\n        let c = x[2];\n        let d = x[3];\n        // ff()\n        a += (((b & c) | (~b & d)) + k[0] - 680876936) | 0;\n        a = (((a << 7) | (a >>> 25)) + b) | 0;\n        d += (((a & b) | (~a & c)) + k[1] - 389564586) | 0;\n        d = (((d << 12) | (d >>> 20)) + a) | 0;\n        c += (((d & a) | (~d & b)) + k[2] + 606105819) | 0;\n        c = (((c << 17) | (c >>> 15)) + d) | 0;\n        b += (((c & d) | (~c & a)) + k[3] - 1044525330) | 0;\n        b = (((b << 22) | (b >>> 10)) + c) | 0;\n        a += (((b & c) | (~b & d)) + k[4] - 176418897) | 0;\n        a = (((a << 7) | (a >>> 25)) + b) | 0;\n        d += (((a & b) | (~a & c)) + k[5] + 1200080426) | 0;\n        d = (((d << 12) | (d >>> 20)) + a) | 0;\n        c += (((d & a) | (~d & b)) + k[6] - 1473231341) | 0;\n        c = (((c << 17) | (c >>> 15)) + d) | 0;\n        b += (((c & d) | (~c & a)) + k[7] - 45705983) | 0;\n        b = (((b << 22) | (b >>> 10)) + c) | 0;\n        a += (((b & c) | (~b & d)) + k[8] + 1770035416) | 0;\n        a = (((a << 7) | (a >>> 25)) + b) | 0;\n        d += (((a & b) | (~a & c)) + k[9] - 1958414417) | 0;\n        d = (((d << 12) | (d >>> 20)) + a) | 0;\n        c += (((d & a) | (~d & b)) + k[10] - 42063) | 0;\n        c = (((c << 17) | (c >>> 15)) + d) | 0;\n        b += (((c & d) | (~c & a)) + k[11] - 1990404162) | 0;\n        b = (((b << 22) | (b >>> 10)) + c) | 0;\n        a += (((b & c) | (~b & d)) + k[12] + 1804603682) | 0;\n        a = (((a << 7) | (a >>> 25)) + b) | 0;\n        d += (((a & b) | (~a & c)) + k[13] - 40341101) | 0;\n        d = (((d << 12) | (d >>> 20)) + a) | 0;\n        c += (((d & a) | (~d & b)) + k[14] - 1502002290) | 0;\n        c = (((c << 17) | (c >>> 15)) + d) | 0;\n        b += (((c & d) | (~c & a)) + k[15] + 1236535329) | 0;\n        b = (((b << 22) | (b >>> 10)) + c) | 0;\n        // gg()\n        a += (((b & d) | (c & ~d)) + k[1] - 165796510) | 0;\n        a = (((a << 5) | (a >>> 27)) + b) | 0;\n        d += (((a & c) | (b & ~c)) + k[6] - 1069501632) | 0;\n        d = (((d << 9) | (d >>> 23)) + a) | 0;\n        c += (((d & b) | (a & ~b)) + k[11] + 643717713) | 0;\n        c = (((c << 14) | (c >>> 18)) + d) | 0;\n        b += (((c & a) | (d & ~a)) + k[0] - 373897302) | 0;\n        b = (((b << 20) | (b >>> 12)) + c) | 0;\n        a += (((b & d) | (c & ~d)) + k[5] - 701558691) | 0;\n        a = (((a << 5) | (a >>> 27)) + b) | 0;\n        d += (((a & c) | (b & ~c)) + k[10] + 38016083) | 0;\n        d = (((d << 9) | (d >>> 23)) + a) | 0;\n        c += (((d & b) | (a & ~b)) + k[15] - 660478335) | 0;\n        c = (((c << 14) | (c >>> 18)) + d) | 0;\n        b += (((c & a) | (d & ~a)) + k[4] - 405537848) | 0;\n        b = (((b << 20) | (b >>> 12)) + c) | 0;\n        a += (((b & d) | (c & ~d)) + k[9] + 568446438) | 0;\n        a = (((a << 5) | (a >>> 27)) + b) | 0;\n        d += (((a & c) | (b & ~c)) + k[14] - 1019803690) | 0;\n        d = (((d << 9) | (d >>> 23)) + a) | 0;\n        c += (((d & b) | (a & ~b)) + k[3] - 187363961) | 0;\n        c = (((c << 14) | (c >>> 18)) + d) | 0;\n        b += (((c & a) | (d & ~a)) + k[8] + 1163531501) | 0;\n        b = (((b << 20) | (b >>> 12)) + c) | 0;\n        a += (((b & d) | (c & ~d)) + k[13] - 1444681467) | 0;\n        a = (((a << 5) | (a >>> 27)) + b) | 0;\n        d += (((a & c) | (b & ~c)) + k[2] - 51403784) | 0;\n        d = (((d << 9) | (d >>> 23)) + a) | 0;\n        c += (((d & b) | (a & ~b)) + k[7] + 1735328473) | 0;\n        c = (((c << 14) | (c >>> 18)) + d) | 0;\n        b += (((c & a) | (d & ~a)) + k[12] - 1926607734) | 0;\n        b = (((b << 20) | (b >>> 12)) + c) | 0;\n        // hh()\n        a += ((b ^ c ^ d) + k[5] - 378558) | 0;\n        a = (((a << 4) | (a >>> 28)) + b) | 0;\n        d += ((a ^ b ^ c) + k[8] - 2022574463) | 0;\n        d = (((d << 11) | (d >>> 21)) + a) | 0;\n        c += ((d ^ a ^ b) + k[11] + 1839030562) | 0;\n        c = (((c << 16) | (c >>> 16)) + d) | 0;\n        b += ((c ^ d ^ a) + k[14] - 35309556) | 0;\n        b = (((b << 23) | (b >>> 9)) + c) | 0;\n        a += ((b ^ c ^ d) + k[1] - 1530992060) | 0;\n        a = (((a << 4) | (a >>> 28)) + b) | 0;\n        d += ((a ^ b ^ c) + k[4] + 1272893353) | 0;\n        d = (((d << 11) | (d >>> 21)) + a) | 0;\n        c += ((d ^ a ^ b) + k[7] - 155497632) | 0;\n        c = (((c << 16) | (c >>> 16)) + d) | 0;\n        b += ((c ^ d ^ a) + k[10] - 1094730640) | 0;\n        b = (((b << 23) | (b >>> 9)) + c) | 0;\n        a += ((b ^ c ^ d) + k[13] + 681279174) | 0;\n        a = (((a << 4) | (a >>> 28)) + b) | 0;\n        d += ((a ^ b ^ c) + k[0] - 358537222) | 0;\n        d = (((d << 11) | (d >>> 21)) + a) | 0;\n        c += ((d ^ a ^ b) + k[3] - 722521979) | 0;\n        c = (((c << 16) | (c >>> 16)) + d) | 0;\n        b += ((c ^ d ^ a) + k[6] + 76029189) | 0;\n        b = (((b << 23) | (b >>> 9)) + c) | 0;\n        a += ((b ^ c ^ d) + k[9] - 640364487) | 0;\n        a = (((a << 4) | (a >>> 28)) + b) | 0;\n        d += ((a ^ b ^ c) + k[12] - 421815835) | 0;\n        d = (((d << 11) | (d >>> 21)) + a) | 0;\n        c += ((d ^ a ^ b) + k[15] + 530742520) | 0;\n        c = (((c << 16) | (c >>> 16)) + d) | 0;\n        b += ((c ^ d ^ a) + k[2] - 995338651) | 0;\n        b = (((b << 23) | (b >>> 9)) + c) | 0;\n        // ii()\n        a += ((c ^ (b | ~d)) + k[0] - 198630844) | 0;\n        a = (((a << 6) | (a >>> 26)) + b) | 0;\n        d += ((b ^ (a | ~c)) + k[7] + 1126891415) | 0;\n        d = (((d << 10) | (d >>> 22)) + a) | 0;\n        c += ((a ^ (d | ~b)) + k[14] - 1416354905) | 0;\n        c = (((c << 15) | (c >>> 17)) + d) | 0;\n        b += ((d ^ (c | ~a)) + k[5] - 57434055) | 0;\n        b = (((b << 21) | (b >>> 11)) + c) | 0;\n        a += ((c ^ (b | ~d)) + k[12] + 1700485571) | 0;\n        a = (((a << 6) | (a >>> 26)) + b) | 0;\n        d += ((b ^ (a | ~c)) + k[3] - 1894986606) | 0;\n        d = (((d << 10) | (d >>> 22)) + a) | 0;\n        c += ((a ^ (d | ~b)) + k[10] - 1051523) | 0;\n        c = (((c << 15) | (c >>> 17)) + d) | 0;\n        b += ((d ^ (c | ~a)) + k[1] - 2054922799) | 0;\n        b = (((b << 21) | (b >>> 11)) + c) | 0;\n        a += ((c ^ (b | ~d)) + k[8] + 1873313359) | 0;\n        a = (((a << 6) | (a >>> 26)) + b) | 0;\n        d += ((b ^ (a | ~c)) + k[15] - 30611744) | 0;\n        d = (((d << 10) | (d >>> 22)) + a) | 0;\n        c += ((a ^ (d | ~b)) + k[6] - 1560198380) | 0;\n        c = (((c << 15) | (c >>> 17)) + d) | 0;\n        b += ((d ^ (c | ~a)) + k[13] + 1309151649) | 0;\n        b = (((b << 21) | (b >>> 11)) + c) | 0;\n        a += ((c ^ (b | ~d)) + k[4] - 145523070) | 0;\n        a = (((a << 6) | (a >>> 26)) + b) | 0;\n        d += ((b ^ (a | ~c)) + k[11] - 1120210379) | 0;\n        d = (((d << 10) | (d >>> 22)) + a) | 0;\n        c += ((a ^ (d | ~b)) + k[2] + 718787259) | 0;\n        c = (((c << 15) | (c >>> 17)) + d) | 0;\n        b += ((d ^ (c | ~a)) + k[9] - 343485551) | 0;\n        b = (((b << 21) | (b >>> 11)) + c) | 0;\n\n        x[0] = (a + x[0]) | 0;\n        x[1] = (b + x[1]) | 0;\n        x[2] = (c + x[2]) | 0;\n        x[3] = (d + x[3]) | 0;\n    }\n\n    private _dataLength = 0;\n    private _bufferLength = 0;\n\n    private _state: Int32Array = new Int32Array(4);\n    private _buffer: ArrayBuffer = new ArrayBuffer(68);\n    private _buffer8: Uint8Array;\n    private _buffer32: Uint32Array;\n\n    constructor() {\n        this._buffer8 = new Uint8Array(this._buffer, 0, 68);\n        this._buffer32 = new Uint32Array(this._buffer, 0, 17);\n        this.start();\n    }\n\n    /**\n     * Initialise buffer to be hashed\n     */\n    public start() {\n        this._dataLength = 0;\n        this._bufferLength = 0;\n        this._state.set(Md5.stateIdentity);\n        return this;\n    }\n\n    // Char to code point to to array conversion:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n    // #Example.3A_Fixing_charCodeAt_to_handle_non-Basic-Multilingual-Plane_characters_if_their_presence_earlier_in_the_string_is_unknown\n\n    /**\n     * Append a UTF-8 string to the hash buffer\n     * @param str String to append\n     */\n    public appendStr(str: string) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let code;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code = str.charCodeAt(i);\n            if (code < 128) {\n                buf8[bufLen++] = code;\n            } else if (code < 0x800) {\n                buf8[bufLen++] = (code >>> 6) + 0xc0;\n                buf8[bufLen++] = (code & 0x3f) | 0x80;\n            } else if (code < 0xd800 || code > 0xdbff) {\n                buf8[bufLen++] = (code >>> 12) + 0xe0;\n                buf8[bufLen++] = ((code >>> 6) & 0x3f) | 0x80;\n                buf8[bufLen++] = (code & 0x3f) | 0x80;\n            } else {\n                code =\n                    (code - 0xd800) * 0x400 +\n                    (str.charCodeAt(++i) - 0xdc00) +\n                    0x10000;\n                if (code > 0x10ffff) {\n                    throw new Error(\n                        'Unicode standard supports code points up to U+10FFFF',\n                    );\n                }\n                buf8[bufLen++] = (code >>> 18) + 0xf0;\n                buf8[bufLen++] = ((code >>> 12) & 0x3f) | 0x80;\n                buf8[bufLen++] = ((code >>> 6) & 0x3f) | 0x80;\n                buf8[bufLen++] = (code & 0x3f) | 0x80;\n            }\n            if (bufLen >= 64) {\n                this._dataLength += 64;\n                Md5._md5cycle(this._state, buf32);\n                bufLen -= 64;\n                buf32[0] = buf32[16];\n            }\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n\n    /**\n     * Append an ASCII string to the hash buffer\n     * @param str String to append\n     */\n    public appendAsciiStr(str: string) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let i;\n        let j = 0;\n\n        for (;;) {\n            i = Math.min(str.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = str.charCodeAt(j++);\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n\n    /**\n     * Append a byte array to the hash buffer\n     * @param input array to append\n     */\n    public appendByteArray(input: Uint8Array) {\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        let bufLen = this._bufferLength;\n        let i;\n        let j = 0;\n\n        for (;;) {\n            i = Math.min(input.length - j, 64 - bufLen);\n            while (i--) {\n                buf8[bufLen++] = input[j++];\n            }\n            if (bufLen < 64) {\n                break;\n            }\n            this._dataLength += 64;\n            Md5._md5cycle(this._state, buf32);\n            bufLen = 0;\n        }\n        this._bufferLength = bufLen;\n        return this;\n    }\n\n    /**\n     * Get the state of the hash buffer\n     */\n    public getState(): HasherState {\n        const s = this._state;\n\n        return {\n            buffer: String.fromCharCode.apply(null, Array.from(this._buffer8)),\n            buflen: this._bufferLength,\n            length: this._dataLength,\n            state: [s[0], s[1], s[2], s[3]],\n        };\n    }\n\n    /**\n     * Override the current state of the hash buffer\n     * @param state New hash buffer state\n     */\n    public setState(state: HasherState) {\n        const buf = state.buffer;\n        const x = state.state;\n        const s = this._state;\n        let i;\n\n        this._dataLength = state.length;\n        this._bufferLength = state.buflen;\n        s[0] = x[0];\n        s[1] = x[1];\n        s[2] = x[2];\n        s[3] = x[3];\n\n        for (i = 0; i < buf.length; i += 1) {\n            this._buffer8[i] = buf.charCodeAt(i);\n        }\n    }\n\n    /**\n     * Hash the current state of the hash buffer and return the result\n     * @param raw Whether to return the value as an `Int32Array`\n     */\n    public end(raw: boolean = false): Int32Array | string {\n        const bufLen = this._bufferLength;\n        const buf8 = this._buffer8;\n        const buf32 = this._buffer32;\n        const i = (bufLen >> 2) + 1;\n\n        this._dataLength += bufLen;\n        const dataBitsLen = this._dataLength * 8;\n\n        buf8[bufLen] = 0x80;\n        buf8[bufLen + 1] = buf8[bufLen + 2] = buf8[bufLen + 3] = 0;\n        buf32.set(Md5.buffer32Identity.subarray(i), i);\n\n        if (bufLen > 55) {\n            Md5._md5cycle(this._state, buf32);\n            buf32.set(Md5.buffer32Identity);\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        if (dataBitsLen <= 0xffffffff) {\n            buf32[14] = dataBitsLen;\n        } else {\n            const matches = dataBitsLen.toString(16).match(/(.*?)(.{0,8})$/);\n            if (matches === null) return raw ? EMPTY_STATE : '';\n\n            const lo = parseInt(matches[2], 16);\n            const hi = parseInt(matches[1], 16) || 0;\n\n            buf32[14] = lo;\n            buf32[15] = hi;\n        }\n\n        Md5._md5cycle(this._state, buf32);\n\n        return raw ? this._state : Md5._hex(this._state);\n    }\n}\n\nif (Md5.hashStr('hello') !== '5d41402abc4b2a76b9719d911017c592') {\n    throw new Error('Md5 self test failed.');\n}\n","import { Md5 } from './md5';\n\ndeclare let FileReaderSync: any;\n\nexport interface HashingResponse {\n    success: boolean;\n    result?: string | Int32Array;\n}\n\n// Hashes any blob\nexport class Md5FileHasher {\n    private _reader: any;\n\n    private _md5!: Md5;\n    private _part!: number;\n    // private _length!: number;\n    private _blob: any;\n\n    constructor(\n        private _callback: (r: HashingResponse) => void, // Callback to return the result\n        private _async: boolean = true, // Async version is not always available in a web worker\n        private _partSize: number = 1048576, // 1mb\n    ) {\n        this._configureReader();\n    }\n\n    /**\n     * Hash a blob of data in the worker\n     * @param blob Data to hash\n     */\n    public hash(blob: any) {\n        const self = this;\n\n        self._blob = blob;\n        // self._length = Math.ceil(blob.size / self._partSize);\n        self._part = 0;\n        self._md5 = new Md5();\n        self._processPart();\n    }\n\n    private _fail() {\n        this._callback({\n            success: false,\n            result: 'data read failed',\n        });\n    }\n\n    private _hashData(e: any) {\n        let self = this;\n\n        self._md5.appendByteArray(new Uint8Array(e.target.result));\n        if (self._part * self._partSize >= self._blob.size) {\n            self._callback({\n                success: true,\n                result: self._md5.end(),\n            });\n        } else {\n            self._processPart();\n        }\n    }\n\n    private _processPart() {\n        const self = this;\n        let endbyte = 0;\n        let current_part: any;\n\n        self._part += 1;\n\n        if (self._blob.size > self._partSize) {\n            // If blob bigger then part_size we will slice it up\n            endbyte = self._part * self._partSize;\n            if (endbyte > self._blob.size) {\n                endbyte = self._blob.size;\n            }\n            current_part = self._blob.slice(\n                (self._part - 1) * self._partSize,\n                endbyte,\n            );\n        } else {\n            current_part = self._blob;\n        }\n\n        if (self._async) {\n            self._reader.readAsArrayBuffer(current_part);\n        } else {\n            setTimeout(() => {\n                try {\n                    self._hashData({\n                        target: {\n                            result: self._reader.readAsArrayBuffer(\n                                current_part,\n                            ),\n                        },\n                    });\n                } catch (e) {\n                    self._fail();\n                }\n            }, 0);\n        }\n    }\n\n    private _configureReader() {\n        const self = this;\n\n        if (self._async) {\n            self._reader = new FileReader();\n            self._reader.onload = self._hashData.bind(self);\n            self._reader.onerror = self._fail.bind(self);\n            self._reader.onabort = self._fail.bind(self);\n        } else {\n            self._reader = new FileReaderSync();\n        }\n    }\n}\n","export interface WorkerOptions {\n    credentials?: 'omit' | 'same-origin' | 'include';\n    name?: string;\n    type?: 'classic' | 'module';\n}\n\ndeclare var Worker: {\n    prototype: Worker;\n    new (stringUrl: string, options?: WorkerOptions): Worker;\n};\n\ninterface HashingRequest {\n    blob: any;\n    resolve: (...d: any) => void;\n    reject: (...d: any) => void;\n}\n\nexport class ParallelHasher {\n    private _queue: HashingRequest[] = [];\n    private _hashWorker: any;\n    private _processing?: HashingRequest;\n\n    private _ready: boolean = true;\n\n    constructor(workerUri: string, workerOptions?: WorkerOptions) {\n        const self = this;\n\n        if (Worker) {\n            self._hashWorker = new Worker(workerUri, workerOptions);\n            self._hashWorker.onmessage = self._recievedMessage.bind(self);\n            self._hashWorker.onerror = (err: any) => {\n                self._ready = false;\n                console.error('Hash worker failure', err);\n            };\n        } else {\n            self._ready = false;\n            console.error('Web Workers are not supported in this browser');\n        }\n    }\n\n    /**\n     * Hash a blob of data in the worker\n     * @param blob Data to hash\n     * @returns Promise of the Hashed result\n     */\n    public hash(blob: any) {\n        const self = this;\n        let promise;\n\n        promise = new Promise((resolve, reject) => {\n            self._queue.push({\n                blob,\n                resolve,\n                reject,\n            });\n\n            self._processNext();\n        });\n\n        return promise;\n    }\n\n    /** Terminate any existing hash requests */\n    public terminate() {\n        this._ready = false;\n        this._hashWorker.terminate();\n    }\n\n    // Processes the next item in the queue\n    private _processNext() {\n        if (this._ready && !this._processing && this._queue.length > 0) {\n            this._processing = this._queue.pop();\n            this._hashWorker.postMessage(this._processing!.blob);\n        }\n    }\n\n    // Hash result is returned from the worker\n    private _recievedMessage(evt: any) {\n        const data = evt.data;\n\n        if (data.success) {\n            this._processing?.resolve(data.result);\n        } else {\n            this._processing?.reject(data.result);\n        }\n\n        this._processing = undefined;\n        this._processNext();\n    }\n}\n"],"names":["EMPTY_STATE","Md5","str","raw","x","hc","ho","n","offset","j","i","k","a","b","c","d","buf8","buf32","bufLen","code","input","s","state","buf","dataBitsLen","matches","lo","hi","Md5FileHasher","_callback","_async","_partSize","blob","self","e","endbyte","current_part","ParallelHasher","workerUri","workerOptions","err","promise","resolve","reject","evt","data"],"mappings":"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"}