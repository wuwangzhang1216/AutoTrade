'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["className", "ref", "size", "color", "variant", "children", "onClick", "style"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { Tag as AntTag } from 'antd';
import { cva } from 'class-variance-authority';
import { memo, useMemo } from 'react';
import { colorsPreset, colorsPresetSystem, presetColors, presetSystemColors } from "./utils";
import { useStyles } from "./styles";
import { jsx as _jsx } from "react/jsx-runtime";
var Tag = /*#__PURE__*/memo(function (_ref) {
  var className = _ref.className,
    ref = _ref.ref,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'middle' : _ref$size,
    color = _ref.color,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'filled' : _ref$variant,
    children = _ref.children,
    onClick = _ref.onClick,
    style = _ref.style,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useStyles = useStyles(),
    styles = _useStyles.styles,
    cx = _useStyles.cx,
    theme = _useStyles.theme;
  var variants = useMemo(function () {
    return cva(styles.root, {
      defaultVariants: {
        size: 'middle',
        variant: 'filled'
      },
      /* eslint-disable sort-keys-fix/sort-keys-fix */
      variants: {
        variant: {
          filled: styles.filled,
          outlined: styles.outlined,
          borderless: styles.borderless
        },
        size: {
          small: styles.small,
          middle: null,
          large: styles.large
        }
      }
      /* eslint-enable sort-keys-fix/sort-keys-fix */
    });
  }, [styles]);
  var colors = useMemo(function () {
    var textColor = theme.colorTextSecondary;
    var backgroundColor;
    var borderColor;
    var isBorderless = variant === 'borderless';
    var isFilled = variant === 'filled';
    var isPresetColor = color && presetColors.includes(color);
    var isPresetSystemColors = color && presetSystemColors.has(color);
    var isHexColor = color && color.startsWith('#');
    if (isPresetColor) {
      textColor = colorsPreset(theme, color);
      backgroundColor = isBorderless ? 'transparent' : colorsPreset(theme, color, 'fillTertiary');
      borderColor = colorsPreset(theme, color, isFilled ? 'fillQuaternary' : 'fillTertiary');
    }
    if (isPresetSystemColors) {
      textColor = colorsPresetSystem(theme, color);
      backgroundColor = isBorderless ? 'transparent' : colorsPresetSystem(theme, color, 'fillTertiary');
      borderColor = colorsPresetSystem(theme, color, isFilled ? 'fillQuaternary' : 'fillTertiary');
    }
    if (isHexColor) {
      textColor = theme.colorBgLayout;
      backgroundColor = isBorderless ? 'transparent' : color;
    }
    return {
      backgroundColor: backgroundColor,
      borderColor: borderColor,
      textColor: textColor
    };
  }, [color, theme, variant]);
  return /*#__PURE__*/_jsx(AntTag, _objectSpread(_objectSpread({
    bordered: false,
    className: cx(variants({
      size: size,
      variant: variant
    }), className),
    color: color,
    onClick: onClick,
    ref: ref,
    style: _objectSpread({
      background: colors === null || colors === void 0 ? void 0 : colors.backgroundColor,
      borderColor: colors === null || colors === void 0 ? void 0 : colors.borderColor,
      color: colors === null || colors === void 0 ? void 0 : colors.textColor,
      cursor: onClick ? 'pointer' : undefined
    }, style)
  }, rest), {}, {
    children: children
  }));
});
Tag.displayName = 'Tag';
export default Tag;