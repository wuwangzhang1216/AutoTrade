var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref, size) {
  var css = _ref.css;
  var shadowSize = size + '%';
  return {
    bottomShadow: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      mask-image: linear-gradient(180deg, #000 calc(100% - ", "), transparent);\n    "])), shadowSize),
    hideScrollBar: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      scrollbar-width: none;\n\n      -ms-overflow-style: none;\n\n      &::-webkit-scrollbar {\n        display: none;\n      }\n    "]))),
    horizontal: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      overflow-x: auto;\n    "]))),
    leftRightShadow: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n      mask-image: linear-gradient(\n        to right,\n        #000,\n        #000,\n        transparent 0,\n        #000 ", ",\n        #000 calc(100% - ", "),\n        transparent\n      );\n    "])), shadowSize, shadowSize),
    // 水平滚动阴影
    leftShadow: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n      mask-image: linear-gradient(270deg, #000 calc(100% - ", "), transparent);\n    "])), shadowSize),
    rightShadow: css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n      mask-image: linear-gradient(90deg, #000 calc(100% - ", "), transparent);\n    "])), shadowSize),
    root: css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n      position: relative;\n      overflow: hidden;\n    "]))),
    topBottomShadow: css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n      mask-image: linear-gradient(\n        #000,\n        #000,\n        transparent 0,\n        #000 ", ",\n        #000 calc(100% - ", "),\n        transparent\n      );\n    "])), shadowSize, shadowSize),
    // 垂直滚动阴影
    topShadow: css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n      mask-image: linear-gradient(0deg, #000 calc(100% - ", "), transparent);\n    "])), shadowSize),
    vertical: css(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n      overflow-y: auto;\n    "])))
  };
});