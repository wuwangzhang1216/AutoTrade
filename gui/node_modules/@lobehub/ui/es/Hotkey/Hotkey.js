'use client';

var _excluded = ["variant", "classNames", "styles", "keys", "inverseTheme", "isApple", "compact", "className", "style"];
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
import { cva } from 'class-variance-authority';
import { ArrowBigUpIcon, ArrowDownIcon, ArrowLeftIcon, ArrowRightIcon, ArrowRightToLineIcon, ArrowUpIcon, ChevronUpIcon, Command, CornerDownLeftIcon, Delete, Grid2X2Icon, MouseIcon, Option, SpaceIcon } from 'lucide-react';
import { memo, useEffect, useMemo, useState } from 'react';
import { Center, Flexbox } from 'react-layout-kit';
import Icon from "../Icon";
import LeftClickIcon from "../icons/lucideExtra/LeftClickIcon";
import LeftDoubleClickIcon from "../icons/lucideExtra/LeftDoubleClickIcon";
import RightClickIcon from "../icons/lucideExtra/RightClickIcon";
import RightDoubleClickIcon from "../icons/lucideExtra/RightDoubleClickIcon";
import { KeyMapEnum } from "./const";
import { useStyles } from "./style";
import { checkIsAppleDevice, splitKeysByPlus, startCase } from "./utils";
import { jsx as _jsx } from "react/jsx-runtime";
var mappingKey = function mappingKey(isAppleDevice) {
  var _ref;
  return _ref = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, KeyMapEnum.Alt, isAppleDevice ? /*#__PURE__*/_jsx(Icon, {
    icon: Option,
    size: {
      size: '0.95em'
    }
  }) : 'Alt'), KeyMapEnum.Backspace, isAppleDevice ? /*#__PURE__*/_jsx(Icon, {
    icon: Delete
  }) : 'Backspace'), KeyMapEnum.Ctrl, isAppleDevice ? /*#__PURE__*/_jsx(Icon, {
    icon: ChevronUpIcon
  }) : 'Ctrl'), KeyMapEnum.Down, /*#__PURE__*/_jsx(Icon, {
    icon: ArrowDownIcon
  })), KeyMapEnum.Enter, isAppleDevice ? /*#__PURE__*/_jsx(Icon, {
    icon: CornerDownLeftIcon
  }) : 'Enter'), KeyMapEnum.LeftClick, /*#__PURE__*/_jsx(Icon, {
    icon: LeftClickIcon,
    size: {
      size: '1.2em',
      strokeWidth: 1.75
    }
  })), KeyMapEnum.Left, /*#__PURE__*/_jsx(Icon, {
    icon: ArrowLeftIcon
  })), KeyMapEnum.Meta, isAppleDevice ? /*#__PURE__*/_jsx(Icon, {
    icon: Command,
    size: {
      size: '0.95em'
    }
  }) : /*#__PURE__*/_jsx(Icon, {
    icon: Grid2X2Icon
  })), KeyMapEnum.MiddleClick, /*#__PURE__*/_jsx(Icon, {
    icon: MouseIcon,
    size: {
      size: '1.2em',
      strokeWidth: 1.75
    }
  })), KeyMapEnum.Mod, isAppleDevice ? /*#__PURE__*/_jsx(Icon, {
    icon: Command,
    size: {
      size: '0.95em'
    }
  }) : 'Ctrl'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, KeyMapEnum.RightClick, /*#__PURE__*/_jsx(Icon, {
    icon: RightClickIcon,
    size: {
      size: '1.2em',
      strokeWidth: 1.75
    }
  })), KeyMapEnum.RightDoubleClick, /*#__PURE__*/_jsx(Icon, {
    icon: RightDoubleClickIcon,
    size: {
      size: '1.2em',
      strokeWidth: 1.75
    }
  })), KeyMapEnum.LeftDoubleClick, /*#__PURE__*/_jsx(Icon, {
    icon: LeftDoubleClickIcon,
    size: {
      size: '1.2em',
      strokeWidth: 1.75
    }
  })), KeyMapEnum.Right, /*#__PURE__*/_jsx(Icon, {
    icon: ArrowRightIcon
  })), KeyMapEnum.Shift, isAppleDevice ? /*#__PURE__*/_jsx(Icon, {
    icon: ArrowBigUpIcon,
    size: {
      size: '1.15em',
      strokeWidth: 1.75
    }
  }) : 'Shift'), KeyMapEnum.Space, /*#__PURE__*/_jsx(Icon, {
    icon: SpaceIcon
  })), KeyMapEnum.Tab, isAppleDevice ? /*#__PURE__*/_jsx(Icon, {
    icon: ArrowRightToLineIcon
  }) : 'Tab'), KeyMapEnum.Up, /*#__PURE__*/_jsx(Icon, {
    icon: ArrowUpIcon
  })), KeyMapEnum.Comma, ','), KeyMapEnum.Period, '.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, KeyMapEnum.Slash, '?'), KeyMapEnum.Semicolon, ';'), KeyMapEnum.Quote, "'"), KeyMapEnum.Backquote, '`'), KeyMapEnum.Backslash, '\\'), KeyMapEnum.BracketLeft, '['), KeyMapEnum.BracketRight, ']'), KeyMapEnum.Minus, '-'), KeyMapEnum.Equal, '+');
};
var Hotkey = /*#__PURE__*/memo(function (_ref2) {
  var _ref2$variant = _ref2.variant,
    variant = _ref2$variant === void 0 ? 'filled' : _ref2$variant,
    classNames = _ref2.classNames,
    customStyles = _ref2.styles,
    keys = _ref2.keys,
    inverseTheme = _ref2.inverseTheme,
    isApple = _ref2.isApple,
    compact = _ref2.compact,
    className = _ref2.className,
    style = _ref2.style,
    rest = _objectWithoutProperties(_ref2, _excluded);
  var _useStyles = useStyles(),
    cx = _useStyles.cx,
    styles = _useStyles.styles;
  var isBorderless = variant === 'borderless';
  var _useState = useState(splitKeysByPlus(keys)),
    _useState2 = _slicedToArray(_useState, 2),
    keysGroup = _useState2[0],
    setKeysGroup = _useState2[1];
  var isAppleDevice = useMemo(function () {
    return checkIsAppleDevice(isApple);
  }, [isApple]);
  var variants = useMemo(function () {
    return cva(styles.root, {
      defaultVariants: {
        inverseTheme: false,
        variant: 'filled'
      },
      /* eslint-disable sort-keys-fix/sort-keys-fix */
      variants: {
        variant: {
          filled: styles.filled,
          outlined: styles.outlined,
          borderless: styles.borderless
        },
        inverseTheme: {
          false: null,
          true: styles.inverseTheme
        }
      }
      /* eslint-enable sort-keys-fix/sort-keys-fix */
    });
  }, [styles]);
  useEffect(function () {
    var newValue = splitKeysByPlus(keys);
    setKeysGroup(newValue);
  }, [keys]);
  var mapping = useMemo(function () {
    return mappingKey(isAppleDevice);
  }, [isAppleDevice]);
  return /*#__PURE__*/_jsx(Flexbox, _objectSpread(_objectSpread({
    align: 'center',
    className: className,
    gap: isBorderless ? 6 : 2,
    horizontal: true,
    style: style
  }, rest), {}, {
    children: compact || isBorderless ? /*#__PURE__*/_jsx(Center, {
      as: 'kbd',
      className: cx(variants({
        inverseTheme: inverseTheme,
        variant: variant
      }), classNames === null || classNames === void 0 ? void 0 : classNames.kbdClassName),
      gap: 6,
      horizontal: true,
      style: customStyles === null || customStyles === void 0 ? void 0 : customStyles.kbdStyle,
      children: keysGroup.map(function (key, index) {
        var _mapping$key;
        return /*#__PURE__*/_jsx("div", {
          children: (_mapping$key = mapping[key]) !== null && _mapping$key !== void 0 ? _mapping$key : startCase(key)
        }, index);
      })
    }) : keysGroup.map(function (key, index) {
      var _mapping$key2;
      return /*#__PURE__*/_jsx(Center, {
        as: 'kbd',
        className: cx(variants({
          inverseTheme: inverseTheme,
          variant: variant
        }), classNames === null || classNames === void 0 ? void 0 : classNames.kbdClassName),
        style: customStyles === null || customStyles === void 0 ? void 0 : customStyles.kbdStyle,
        children: (_mapping$key2 = mapping[key]) !== null && _mapping$key2 !== void 0 ? _mapping$key2 : startCase(key)
      }, index);
    })
  }));
});
Hotkey.displayName = 'Hotkey';
export default Hotkey;