var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    token = _ref.token;
  return {
    body: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      overflow: hidden auto;\n      padding: 16px;\n    "]))),
    container: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      position: relative;\n      overflow: hidden;\n    "]))),
    footer: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      padding-block: 8px;\n      padding-inline: 16px;\n      border-block-start: 1px solid ", ";\n    "])), token.colorBorderSecondary),
    handlerIcon: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 0.2s ", ";\n    "])), token.motionEaseOut),
    header: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n      padding-block: 8px;\n      padding-inline: 16px;\n      font-weight: 500;\n      border-block-end: 1px solid ", ";\n    "])), token.colorBorderSecondary)
  };
});