var _templateObject, _templateObject2, _templateObject3, _templateObject4;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    token = _ref.token,
    isDarkMode = _ref.isDarkMode;
  var cyanColor = isDarkMode ? token.cyan9A : token.cyan11A;
  return {
    chat: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      ol,\n      ul {\n        > li {\n          &::marker {\n            color: ", " !important;\n          }\n\n          > li {\n            &::marker {\n              color: ", " !important;\n            }\n          }\n        }\n      }\n\n      ul {\n        list-style: unset;\n\n        > li {\n          &::before {\n            content: unset;\n            display: unset;\n          }\n        }\n      }\n    "])), cyanColor, token.colorTextSecondary),
    gfm: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      .markdown-alert {\n        margin-block: calc(var(--lobe-markdown-margin-multiple) * 0.5em);\n        padding-inline-start: 1em;\n        border-inline-start: solid 4px ", ";\n\n        > p {\n          margin-block-start: 0 !important;\n        }\n      }\n\n      .markdown-alert > :first-child {\n        margin-block-start: 0;\n      }\n\n      .markdown-alert > :last-child {\n        margin-block-end: 0;\n      }\n\n      .markdown-alert-note {\n        border-inline-start-color: ", ";\n      }\n\n      .markdown-alert-tip {\n        border-inline-start-color: ", ";\n      }\n\n      .markdown-alert-important {\n        border-inline-start-color: ", ";\n      }\n\n      .markdown-alert-warning {\n        border-inline-start-color: ", ";\n      }\n\n      .markdown-alert-caution {\n        border-inline-start-color: ", ";\n      }\n\n      .markdown-alert-title {\n        display: flex;\n        align-items: center;\n        margin-block-end: 0.5em !important;\n        font-weight: 500;\n      }\n\n      .markdown-alert-note .markdown-alert-title {\n        color: ", ";\n        fill: ", ";\n      }\n\n      .markdown-alert-tip .markdown-alert-title {\n        color: ", ";\n        fill: ", ";\n      }\n\n      .markdown-alert-important .markdown-alert-title {\n        color: ", ";\n        fill: ", ";\n      }\n\n      .markdown-alert-warning .markdown-alert-title {\n        color: ", ";\n        fill: ", ";\n      }\n\n      .markdown-alert-caution .markdown-alert-title {\n        color: ", ";\n        fill: ", ";\n      }\n\n      /* Style the footnotes section. */\n\n      .octicon {\n        overflow: visible !important;\n        display: inline-block;\n        margin-inline-end: 0.5em;\n        vertical-align: text-bottom;\n      }\n\n      .sr-only {\n        position: absolute;\n\n        overflow: hidden;\n\n        width: 1px;\n        height: 1px;\n        padding: 0;\n        border: 0;\n\n        word-wrap: normal;\n\n        clip: rect(0, 0, 0, 0);\n      }\n\n      sup:has(*[aria-describedby='footnote-label']) {\n        margin-inline: 2px;\n        vertical-align: super !important;\n\n        [data-footnote-ref] {\n          display: inline-block;\n\n          width: 16px;\n          height: 16px;\n          border-radius: 4px;\n\n          font-family: ", ";\n          font-size: 10px;\n          color: ", " !important;\n          text-align: center;\n\n          background: ", ";\n        }\n      }\n\n      code.color-preview {\n        position: relative;\n        display: inline-flex !important;\n        gap: 0.4em;\n\n        &::after {\n          content: '';\n\n          width: 0.66em;\n          height: 0.66em;\n          border: 1px solid ", ";\n          border-radius: 50%;\n\n          background-color: attr(data-color);\n\n          /* Fallback for browsers that don't support attr() in background */\n          background-color: var(--color-preview-color, #000);\n        }\n      }\n    "])), token.colorBorder, token.colorInfo, token.colorSuccess, token.purple, token.colorWarning, token.colorError, token.colorInfo, token.colorInfo, token.colorSuccess, token.colorSuccess, token.purple, token.purple, token.colorWarning, token.colorWarning, token.colorError, token.colorError, token.fontFamilyCode, token.colorTextSecondary, token.colorFillSecondary, token.colorFill),
    latex: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      .katex-error {\n        color: ", " !important;\n      }\n\n      .katex-html {\n        overflow: auto hidden;\n        padding: 3px;\n\n        .base {\n          margin-block: 0;\n          margin-inline: auto;\n        }\n\n        .tag {\n          position: relative !important;\n          display: inline-block;\n          padding-inline-start: 0.5rem;\n        }\n      }\n    "])), token.colorTextDescription),
    root: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n      position: relative;\n      overflow: hidden;\n      max-width: 100%;\n    "])))
  };
});