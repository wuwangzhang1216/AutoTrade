'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["children"],
  _excluded2 = ["children"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { marked } from 'marked';
import { memo, useId, useMemo } from 'react';
import Markdown from 'react-markdown';
import { useMarkdownComponents, useMarkdownContent, useMarkdownRehypePlugins, useMarkdownRemarkPlugins } from "../../hooks/useMarkdown";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { createElement as _createElement } from "react";
var parseMarkdownIntoBlocks = function parseMarkdownIntoBlocks(markdown) {
  var tokens = marked.lexer(markdown);
  return tokens.map(function (token) {
    return token.raw;
  });
};
var StreamdownBlock = /*#__PURE__*/memo(function (_ref) {
  var children = _ref.children,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_jsx(Markdown, _objectSpread(_objectSpread({}, rest), {}, {
    children: children
  }));
}, function (prevProps, nextProps) {
  return prevProps.children === nextProps.children;
});
StreamdownBlock.displayName = 'StreamdownBlock';
export var StreamdownRender = /*#__PURE__*/memo(function (_ref2) {
  var children = _ref2.children,
    rest = _objectWithoutProperties(_ref2, _excluded2);
  var _useStyles = useStyles(),
    styles = _useStyles.styles;
  var escapedContent = useMarkdownContent(children || '');
  var components = useMarkdownComponents();
  var rehypePluginsList = useMarkdownRehypePlugins();
  var remarkPluginsList = useMarkdownRemarkPlugins();
  var generatedId = useId();
  var blocks = useMemo(function () {
    return parseMarkdownIntoBlocks(typeof escapedContent === 'string' ? escapedContent : '');
  }, [escapedContent]);
  return /*#__PURE__*/_jsx("div", {
    className: styles.animated,
    children: blocks.map(function (block, index) {
      return /*#__PURE__*/_createElement(StreamdownBlock, _objectSpread(_objectSpread({}, rest), {}, {
        components: components,
        key: "".concat(generatedId, "-block_").concat(index),
        rehypePlugins: rehypePluginsList,
        remarkPlugins: remarkPluginsList
      }), block);
    })
  });
}, function (prevProps, nextProps) {
  return prevProps.children === nextProps.children;
});
StreamdownRender.displayName = 'StreamdownRender';
export default StreamdownRender;