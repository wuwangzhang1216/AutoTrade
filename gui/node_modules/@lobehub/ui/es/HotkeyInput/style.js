var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    token = _ref.token,
    stylish = _ref.stylish;
  return {
    borderless: stylish.variantBorderless,
    disabled: stylish.disabled,
    error: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      border: 1px solid ", ";\n    "])), token.colorError),
    errorText: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      font-size: 12px;\n      color: ", ";\n    "])), token.colorError),
    filled: stylish.variantFilled,
    focused: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      background: ", " !important;\n    "])), token.colorFillSecondary),
    hiddenInput: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n      cursor: text;\n\n      position: absolute;\n      z-index: -1;\n      inset-block-start: 0;\n      inset-inline-start: 0;\n\n      width: 100%;\n      height: 100%;\n\n      opacity: 0;\n    "]))),
    outlined: stylish.variantOutlined,
    placeholder: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n      color: ", ";\n    "])), token.colorTextDescription),
    root: css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n      cursor: pointer;\n\n      position: relative;\n\n      max-width: 100%;\n      height: 36px;\n      padding-block: 0;\n      padding-inline: 12px;\n\n      border-radius: ", "px;\n    "])), token.borderRadius),
    shadow: stylish.shadow
  };
});