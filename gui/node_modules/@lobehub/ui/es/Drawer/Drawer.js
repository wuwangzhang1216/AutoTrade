'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["onClose", "containerMaxWidth", "classNames", "title", "placement", "styles", "children", "height", "width", "extra", "closeIconProps", "noHeader", "sidebarWidth", "sidebar", "closeIcon", "ref"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { Drawer as AntdDrawer } from 'antd';
import { useTheme } from 'antd-style';
import { XIcon } from 'lucide-react';
import { memo, useMemo } from 'react';
import { Flexbox } from 'react-layout-kit';
import ActionIcon from "../ActionIcon";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
var Drawer = /*#__PURE__*/memo(function (_ref) {
  var onClose = _ref.onClose,
    _ref$containerMaxWidt = _ref.containerMaxWidth,
    containerMaxWidth = _ref$containerMaxWidt === void 0 ? 1024 : _ref$containerMaxWidt,
    classNames = _ref.classNames,
    title = _ref.title,
    placement = _ref.placement,
    styles = _ref.styles,
    children = _ref.children,
    height = _ref.height,
    width = _ref.width,
    extra = _ref.extra,
    closeIconProps = _ref.closeIconProps,
    noHeader = _ref.noHeader,
    _ref$sidebarWidth = _ref.sidebarWidth,
    sidebarWidth = _ref$sidebarWidth === void 0 ? 280 : _ref$sidebarWidth,
    sidebar = _ref.sidebar,
    closeIcon = _ref.closeIcon,
    ref = _ref.ref,
    rest = _objectWithoutProperties(_ref, _excluded);
  var theme = useTheme();
  var headerBorder = useMemo(function () {
    if (height === '100%' || width === '100%' || height === '100vh' || width === '100vw') return {};
    switch (placement) {
      case 'top':
        {
          return {
            borderBottom: "1px solid ".concat(theme.colorBorder)
          };
        }
      case 'bottom':
        {
          return {
            borderTop: "1px solid ".concat(theme.colorBorder)
          };
        }
      case 'left':
        {
          return {
            borderRight: "1px solid ".concat(theme.colorBorder)
          };
        }
      case 'right':
        {
          return {
            borderLeft: "1px solid ".concat(theme.colorBorder)
          };
        }
      default:
        {
          return {};
        }
    }
  }, [placement, height, width, theme.colorBorder]);
  var extraNode = /*#__PURE__*/_jsxs(Flexbox, {
    align: 'center',
    className: classNames === null || classNames === void 0 ? void 0 : classNames.extra,
    gap: 4,
    horizontal: true,
    justify: 'flex-end',
    style: _objectSpread({
      position: 'absolute',
      right: 4,
      top: 4
    }, styles === null || styles === void 0 ? void 0 : styles.extra),
    children: [extra, closeIcon || /*#__PURE__*/_jsx(ActionIcon, _objectSpread({
      icon: XIcon,
      onClick: onClose
    }, closeIconProps))]
  });
  var sidebarContent = /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(Flexbox, {
      className: classNames === null || classNames === void 0 ? void 0 : classNames.sidebar,
      paddingBlock: 12,
      paddingInline: 16,
      style: _objectSpread({
        background: theme.colorBgLayout,
        borderRight: "1px solid ".concat(theme.colorBorderSecondary),
        height: '100vh',
        overflowX: 'hidden',
        overflowY: 'auto',
        position: 'sticky',
        top: 0
      }, styles === null || styles === void 0 ? void 0 : styles.sidebar),
      width: sidebarWidth,
      children: sidebar
    }), /*#__PURE__*/_jsx(Flexbox, {
      className: classNames === null || classNames === void 0 ? void 0 : classNames.sidebarContent,
      flex: 1,
      paddingBlock: 12,
      paddingInline: 16,
      style: _objectSpread({
        background: theme.colorBgContainer,
        overflowX: 'hidden',
        overflowY: 'auto'
      }, styles === null || styles === void 0 ? void 0 : styles.sidebarContent),
      children: children
    })]
  });
  return /*#__PURE__*/_jsx(AntdDrawer, _objectSpread(_objectSpread({
    classNames: classNames,
    closable: false,
    extra: noHeader ? undefined : extraNode,
    height: height,
    keyboard: true,
    onClose: onClose,
    panelRef: ref,
    placement: placement,
    styles: _objectSpread(_objectSpread({}, styles), {}, {
      body: _objectSpread({
        background: 'transparent',
        paddingBlock: sidebar ? 0 : 12,
        paddingInline: sidebar ? 0 : 16
      }, styles === null || styles === void 0 ? void 0 : styles.body),
      content: _objectSpread({
        background: sidebar ? "linear-gradient(to right, ".concat(theme.colorBgLayout, " 49.9%, ").concat(theme.colorBgContainer, " 50%)") : theme.colorBgContainer
      }, styles === null || styles === void 0 ? void 0 : styles.content),
      header: _objectSpread({
        background: 'transparent',
        display: noHeader ? 'none' : undefined,
        padding: 4
      }, styles === null || styles === void 0 ? void 0 : styles.header),
      wrapper: _objectSpread(_objectSpread({
        background: theme.colorBgContainer
      }, headerBorder), styles === null || styles === void 0 ? void 0 : styles.wrapper)
    }),
    title: /*#__PURE__*/_jsx(Flexbox, {
      align: 'center',
      className: classNames === null || classNames === void 0 ? void 0 : classNames.title,
      horizontal: true,
      justify: 'flex-start',
      paddingBlock: 8,
      paddingInline: 16,
      style: _objectSpread({
        justifySelf: 'center',
        maxWidth: containerMaxWidth,
        width: '100%'
      }, styles === null || styles === void 0 ? void 0 : styles.title),
      children: title
    }),
    width: width
  }, rest), {}, {
    children: /*#__PURE__*/_jsxs(Flexbox, {
      className: classNames === null || classNames === void 0 ? void 0 : classNames.bodyContent,
      horizontal: !!sidebar,
      style: _objectSpread({
        justifySelf: 'center',
        maxWidth: containerMaxWidth,
        minHeight: '100%',
        overflow: sidebar ? 'visible' : undefined,
        width: '100%'
      }, styles === null || styles === void 0 ? void 0 : styles.bodyContent),
      children: [noHeader && extraNode, sidebar ? sidebarContent : children]
    })
  }));
});
Drawer.displayName = 'Drawer';
export default Drawer;