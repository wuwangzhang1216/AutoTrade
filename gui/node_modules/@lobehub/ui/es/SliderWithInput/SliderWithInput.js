'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["step", "value", "onChange", "max", "min", "defaultValue", "size", "controls", "gap", "style", "className", "classNames", "styles", "disabled", "unlimitedInput", "changeOnWheel"],
  _excluded2 = ["slider", "input"],
  _excluded3 = ["slider", "input"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { Slider } from 'antd';
import { isNull } from 'lodash-es';
import { memo } from 'react';
import { Flexbox } from 'react-layout-kit';
import InputNumber from "../Input/InputNumber";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var SliderWithInput = /*#__PURE__*/memo(function (_ref) {
  var step = _ref.step,
    value = _ref.value,
    onChange = _ref.onChange,
    max = _ref.max,
    min = _ref.min,
    defaultValue = _ref.defaultValue,
    size = _ref.size,
    controls = _ref.controls,
    _ref$gap = _ref.gap,
    gap = _ref$gap === void 0 ? 16 : _ref$gap,
    style = _ref.style,
    className = _ref.className,
    classNames = _ref.classNames,
    styles = _ref.styles,
    disabled = _ref.disabled,
    _ref$unlimitedInput = _ref.unlimitedInput,
    unlimitedInput = _ref$unlimitedInput === void 0 ? false : _ref$unlimitedInput,
    changeOnWheel = _ref.changeOnWheel,
    rest = _objectWithoutProperties(_ref, _excluded);
  var handleOnchange = function handleOnchange(value) {
    if (Number.isNaN(value) || isNull(value)) return;
    onChange === null || onChange === void 0 || onChange(value);
  };
  var _ref2 = classNames || {},
    sliderClassName = _ref2.slider,
    inputClassName = _ref2.input,
    restClassNames = _objectWithoutProperties(_ref2, _excluded2);
  var _ref3 = styles || {},
    sliderStyle = _ref3.slider,
    inputStyle = _ref3.input,
    restStyles = _objectWithoutProperties(_ref3, _excluded3);
  return /*#__PURE__*/_jsxs(Flexbox, {
    align: 'center',
    className: className,
    direction: 'horizontal',
    gap: gap,
    style: style,
    children: [/*#__PURE__*/_jsx(Slider, _objectSpread({
      className: sliderClassName,
      classNames: restClassNames,
      defaultValue: defaultValue,
      disabled: disabled,
      max: max,
      min: min,
      onChange: handleOnchange,
      step: step,
      style: _objectSpread({
        flex: 1,
        margin: size === 'small' ? 0 : undefined
      }, sliderStyle),
      styles: restStyles,
      tooltip: {
        open: false
      },
      value: typeof value === 'number' ? value : 0
    }, rest)), /*#__PURE__*/_jsx(InputNumber, {
      changeOnWheel: changeOnWheel,
      className: inputClassName,
      controls: size !== 'small' || controls,
      defaultValue: defaultValue,
      disabled: disabled,
      max: unlimitedInput ? undefined : max,
      min: min,
      onChange: function onChange(v) {
        return handleOnchange(Number(v));
      },
      size: size,
      step: Number.isNaN(step) || isNull(step) ? undefined : step,
      style: _objectSpread({
        flex: 1,
        maxWidth: size === 'small' ? 40 : 64
      }, inputStyle),
      value: typeof value === 'number' ? value : 0
    })]
  });
});
SliderWithInput.displayName = 'SliderWithInput';
export default SliderWithInput;