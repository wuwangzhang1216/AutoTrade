var _templateObject, _templateObject2;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    token = _ref.token,
    stylish = _ref.stylish,
    prefixCls = _ref.prefixCls;
  return {
    glass: stylish.blur,
    root: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      &.", "-btn {\n        > .", "-btn-icon {\n          display: flex;\n        }\n      }\n    "])), prefixCls, prefixCls),
    shadow: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      box-shadow: ", " !important;\n    "])), token.boxShadowTertiary)
  };
});