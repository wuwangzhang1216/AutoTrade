'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["ref", "activeKey", "classNames", "styles", "onClick", "items"],
  _excluded2 = ["key", "onClick", "className", "style"],
  _excluded3 = ["item"],
  _excluded4 = ["item"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { cx } from 'antd-style';
import { memo } from 'react';
import { Flexbox } from 'react-layout-kit';
import ListItem from "./ListItem";
import { jsx as _jsx } from "react/jsx-runtime";
var List = /*#__PURE__*/memo(function (_ref) {
  var ref = _ref.ref,
    activeKey = _ref.activeKey,
    classNames = _ref.classNames,
    styles = _ref.styles,
    _onClick = _ref.onClick,
    items = _ref.items,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_jsx(Flexbox, _objectSpread(_objectSpread({
    gap: 4,
    padding: 4
  }, rest), {}, {
    children: items.map(function (item) {
      var key = item.key,
        itemOnClick = item.onClick,
        itemClassName = item.className,
        itemStyle = item.style,
        itemRest = _objectWithoutProperties(item, _excluded2);
      var _ref2 = classNames || {},
        customItemClassName = _ref2.item,
        restClassName = _objectWithoutProperties(_ref2, _excluded3);
      var _ref3 = styles || {},
        customItemStyle = _ref3.item,
        restStyles = _objectWithoutProperties(_ref3, _excluded4);
      return /*#__PURE__*/_jsx(ListItem, _objectSpread({
        active: item.key === activeKey,
        className: cx(customItemClassName, itemClassName),
        classNames: restClassName,
        onClick: function onClick(e) {
          _onClick === null || _onClick === void 0 || _onClick({
            item: item,
            key: key
          });
          itemOnClick === null || itemOnClick === void 0 || itemOnClick(e);
        },
        ref: ref,
        style: _objectSpread(_objectSpread({}, customItemStyle), itemStyle),
        styles: restStyles
      }, itemRest), key);
    })
  }));
});
List.displayName = 'List';
export default List;