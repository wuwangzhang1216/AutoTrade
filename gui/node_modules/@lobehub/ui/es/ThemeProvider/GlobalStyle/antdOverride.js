var _templateObject;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { css } from 'antd-style';
import { readableColor, rgba } from 'polished';
export default (function (token) {
  var readColor = readableColor(token.colorPrimary);
  return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    .", "-checkbox-inner:after {\n      border-color: ", " !important;\n    }\n\n    .", "-btn {\n      box-shadow: none;\n    }\n\n    .", "-btn-primary:not(:disabled) {\n      color: ", " !important;\n\n      &:hover {\n        color: ", " !important;\n      }\n\n      &:active {\n        color: ", " !important;\n      }\n    }\n\n    .", "-tooltip-inner {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      min-height: unset;\n      padding-block: 4px;\n      padding-inline: 8px;\n\n      color: ", " !important;\n\n      background-color: ", " !important;\n      border-radius: ", "px !important;\n    }\n\n    .", "-tooltip-arrow {\n      &::before,\n      &::after {\n        background: ", " !important;\n      }\n    }\n\n    .", "-switch-handle::before {\n      background: ", " !important;\n    }\n\n    .", "-image-preview-close,\n      .", "-image-preview-switch-right,\n      .", "-image-preview-switch-left {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      width: 32px;\n      height: 32px;\n      padding: 0;\n\n      background: ", ";\n      border-radius: ", "px;\n\n      ", ";\n    }\n\n    .", "-popover-inner,\n      .", "-dropdown-menu,\n      .", "-select-dropdown {\n      border-radius: ", "px !important;\n      box-shadow:\n        0 0 0 1px ", ",\n        ", " !important;\n    }\n\n    .", "-modal-content {\n      border: 1px solid ", " !important;\n    }\n\n    .", "-radio-wrapper\n      .", "-radio-checked\n      .", "-radio-inner:after {\n      background: ", ";\n    }\n  "])), token.prefixCls, readableColor(token.colorPrimary), token.prefixCls, token.prefixCls, readColor, readColor, readColor, token.prefixCls, token.colorBgLayout, token.colorText, token.borderRadiusSM, token.prefixCls, token.colorText, token.prefixCls, token.colorBgContainer, token.prefixCls, token.prefixCls, token.prefixCls, rgba(token.colorBgMask, 0.1), token.borderRadiusLG, token.stylish.blur, token.prefixCls, token.prefixCls, token.prefixCls, token.borderRadius, token.colorFillTertiary, token.boxShadowSecondary, token.prefixCls, token.colorBorderSecondary, token.prefixCls, token.prefixCls, token.prefixCls, readColor);
});