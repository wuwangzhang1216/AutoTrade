'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["panelRef", "allowFullscreen", "children", "title", "className", "classNames", "width", "onCancel", "open", "destroyOnHidden", "paddings", "height", "enableResponsive", "footer", "styles", "okText", "onOk", "cancelText", "okButtonProps", "cancelButtonProps", "confirmLoading"],
  _excluded2 = ["body"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { Modal as AntModal, Button, ConfigProvider, Drawer } from 'antd';
import { useResponsive } from 'antd-style';
import { Maximize2, Minimize2, X } from 'lucide-react';
import { memo, useState } from 'react';
import ActionIcon from "../ActionIcon";
import Icon from "../Icon";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var Modal = /*#__PURE__*/memo(function (_ref) {
  var _paddings$desktop, _paddings$desktop2;
  var panelRef = _ref.panelRef,
    allowFullscreen = _ref.allowFullscreen,
    children = _ref.children,
    _ref$title = _ref.title,
    title = _ref$title === void 0 ? ' ' : _ref$title,
    className = _ref.className,
    classNames = _ref.classNames,
    _ref$width = _ref.width,
    width = _ref$width === void 0 ? 700 : _ref$width,
    onCancel = _ref.onCancel,
    open = _ref.open,
    destroyOnHidden = _ref.destroyOnHidden,
    paddings = _ref.paddings,
    _ref$height = _ref.height,
    height = _ref$height === void 0 ? '75dvh' : _ref$height,
    _ref$enableResponsive = _ref.enableResponsive,
    enableResponsive = _ref$enableResponsive === void 0 ? true : _ref$enableResponsive,
    footer = _ref.footer,
    customStyles = _ref.styles,
    okText = _ref.okText,
    onOk = _ref.onOk,
    cancelText = _ref.cancelText,
    okButtonProps = _ref.okButtonProps,
    cancelButtonProps = _ref.cancelButtonProps,
    confirmLoading = _ref.confirmLoading,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    fullscreen = _useState2[0],
    setFullscreen = _useState2[1];
  var _useResponsive = useResponsive(),
    mobile = _useResponsive.mobile;
  var _useStyles = useStyles(),
    styles = _useStyles.styles,
    cx = _useStyles.cx,
    theme = _useStyles.theme;
  var _ref2 = customStyles || {},
    body = _ref2.body,
    restStyles = _objectWithoutProperties(_ref2, _excluded2);
  var hideFooter = footer === false || footer === null;
  if (enableResponsive && mobile) return /*#__PURE__*/_jsx(ConfigProvider, {
    theme: {
      token: {
        colorBgElevated: theme.colorBgContainer
      }
    },
    children: /*#__PURE__*/_jsx(Drawer, _objectSpread(_objectSpread({
      className: cx(styles.drawerContent, className),
      classNames: _objectSpread(_objectSpread({}, classNames), {}, {
        wrapper: cx(styles.wrap, classNames === null || classNames === void 0 ? void 0 : classNames.wrapper)
      }),
      closeIcon: /*#__PURE__*/_jsx(ActionIcon, {
        icon: X
      }),
      destroyOnHidden: destroyOnHidden,
      extra: allowFullscreen && /*#__PURE__*/_jsx(ActionIcon, {
        icon: fullscreen ? Minimize2 : Maximize2,
        onClick: function onClick() {
          return setFullscreen(!fullscreen);
        }
      }),
      footer: hideFooter ? null : footer || /*#__PURE__*/_jsxs(_Fragment, {
        children: [/*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({
          color: 'default',
          onClick: onCancel,
          variant: 'filled'
        }, cancelButtonProps), {}, {
          children: cancelText || 'Cancel'
        })), /*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({
          loading: confirmLoading,
          onClick: onOk,
          type: "primary"
        }, okButtonProps), {}, {
          style: _objectSpread({
            marginInlineStart: 8
          }, okButtonProps === null || okButtonProps === void 0 ? void 0 : okButtonProps.style),
          children: okText || 'OK'
        }))]
      }),
      height: fullscreen ? 'calc(100% - env(safe-area-inset-top))' : height,
      onClose: onCancel,
      open: open,
      panelRef: panelRef,
      placement: 'bottom',
      styles: _objectSpread({
        body: _objectSpread({
          paddingBlock: "16px ".concat(footer ? 0 : '16px'),
          paddingInline: (_paddings$desktop = paddings === null || paddings === void 0 ? void 0 : paddings.desktop) !== null && _paddings$desktop !== void 0 ? _paddings$desktop : 16
        }, body)
      }, restStyles),
      title: title
    }, rest), {}, {
      children: children
    }))
  });
  return /*#__PURE__*/_jsx(ConfigProvider, {
    theme: {
      token: {
        colorBgElevated: theme.colorBgContainer
      }
    },
    children: /*#__PURE__*/_jsx(AntModal, _objectSpread(_objectSpread({
      cancelButtonProps: _objectSpread({
        color: 'default',
        variant: 'filled'
      }, cancelButtonProps),
      cancelText: cancelText,
      className: cx(styles.content, className),
      classNames: _objectSpread(_objectSpread({}, classNames), {}, {
        wrapper: cx(styles.wrap, classNames === null || classNames === void 0 ? void 0 : classNames.wrapper)
      }),
      closable: true,
      closeIcon: /*#__PURE__*/_jsx(Icon, {
        icon: X,
        size: 20
      }),
      confirmLoading: confirmLoading,
      destroyOnHidden: destroyOnHidden,
      footer: hideFooter ? null : footer,
      maskClosable: true,
      okButtonProps: okButtonProps,
      okText: okText,
      onCancel: onCancel,
      onOk: onOk,
      open: open,
      panelRef: panelRef,
      styles: _objectSpread({
        body: _objectSpread({
          maxHeight: height,
          overflow: 'hidden auto',
          paddingBlock: "0 ".concat(footer === null ? '16px' : 0),
          paddingInline: (_paddings$desktop2 = paddings === null || paddings === void 0 ? void 0 : paddings.desktop) !== null && _paddings$desktop2 !== void 0 ? _paddings$desktop2 : 16
        }, body)
      }, restStyles),
      title: title,
      width: width
    }, rest), {}, {
      children: children
    }))
  });
});
Modal.displayName = 'Modal';
export default Modal;