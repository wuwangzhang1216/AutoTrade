'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["content", "language", "setLanguage", "showLanguage", "className", "style", "allowChangeLanguage", "fileName", "icon", "actionsRender", "copyable", "variant", "shadow", "wrap", "defaultExpand", "children"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { cva } from 'class-variance-authority';
import { ChevronDown, ChevronRight } from 'lucide-react';
import { memo, useMemo, useState } from 'react';
import { Flexbox } from 'react-layout-kit';
import ActionIcon from "../ActionIcon";
import CopyButton from "../CopyButton";
import { getCodeLanguageDisplayName, getCodeLanguageFilename } from "./const";
import MaterialFileTypeIcon from "../MaterialFileTypeIcon";
import Text from "../Text";
import LangSelect from "./LangSelect";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export var HighlighterFullFeatured = /*#__PURE__*/memo(function (_ref) {
  var content = _ref.content,
    language = _ref.language,
    setLanguage = _ref.setLanguage,
    showLanguage = _ref.showLanguage,
    className = _ref.className,
    style = _ref.style,
    _ref$allowChangeLangu = _ref.allowChangeLanguage,
    allowChangeLanguage = _ref$allowChangeLangu === void 0 ? false : _ref$allowChangeLangu,
    fileName = _ref.fileName,
    icon = _ref.icon,
    actionsRender = _ref.actionsRender,
    copyable = _ref.copyable,
    variant = _ref.variant,
    shadow = _ref.shadow,
    wrap = _ref.wrap,
    _ref$defaultExpand = _ref.defaultExpand,
    defaultExpand = _ref$defaultExpand === void 0 ? true : _ref$defaultExpand,
    children = _ref.children,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useState = useState(defaultExpand),
    _useState2 = _slicedToArray(_useState, 2),
    expand = _useState2[0],
    setExpand = _useState2[1];
  var _useStyles = useStyles(),
    styles = _useStyles.styles,
    cx = _useStyles.cx;
  var variants = useMemo(function () {
    return cva(styles.root, {
      defaultVariants: {
        shadow: false,
        variant: 'filled',
        wrap: false
      },
      /* eslint-disable sort-keys-fix/sort-keys-fix */
      variants: {
        variant: {
          filled: styles.filled,
          outlined: styles.outlined,
          borderless: styles.borderless
        },
        shadow: {
          false: null,
          true: styles.shadow
        },
        wrap: {
          false: styles.nowrap,
          true: null
        }
      }
      /* eslint-enable sort-keys-fix/sort-keys-fix */
    });
  }, [styles]);
  var headerVariants = useMemo(function () {
    return cva(styles.headerRoot, {
      defaultVariants: {
        variant: 'filled'
      },
      /* eslint-disable sort-keys-fix/sort-keys-fix */
      variants: {
        variant: {
          filled: cx(styles.headerFilled, styles.headerOutlined),
          outlined: styles.headerOutlined,
          borderless: styles.headerBorderless
        }
      }
      /* eslint-enable sort-keys-fix/sort-keys-fix */
    });
  }, [styles]);
  var bodyVariants = useMemo(function () {
    return cva(styles.bodyRoot, {
      defaultVariants: {
        expand: true
      },
      variants: {
        expand: {
          false: styles.bodyCollapsed,
          true: styles.bodyExpand
        }
      }
    });
  }, [styles]);
  var originalActions = copyable && /*#__PURE__*/_jsx(CopyButton, {
    content: content,
    size: 'small'
  });
  var actions = actionsRender ? actionsRender({
    actionIconSize: 'small',
    content: content,
    language: language,
    originalNode: originalActions
  }) : originalActions;
  var displayName = useMemo(function () {
    if (fileName) return fileName;
    return getCodeLanguageDisplayName(language);
  }, [fileName, language]);
  var filetype = useMemo(function () {
    if (fileName) return fileName;
    return getCodeLanguageFilename(language);
  }, [fileName, language]);
  return /*#__PURE__*/_jsxs(Flexbox, _objectSpread(_objectSpread({
    className: cx(variants({
      shadow: shadow,
      variant: variant,
      wrap: wrap
    }), className),
    "data-code-type": "highlighter",
    style: style
  }, rest), {}, {
    children: [/*#__PURE__*/_jsxs(Flexbox, {
      align: 'center',
      className: headerVariants({
        variant: variant
      }),
      horizontal: true,
      justify: 'space-between',
      children: [/*#__PURE__*/_jsx(ActionIcon, {
        icon: expand ? ChevronDown : ChevronRight,
        onClick: function onClick() {
          return setExpand(!expand);
        },
        size: 'small'
      }), allowChangeLanguage && !fileName ? showLanguage && /*#__PURE__*/_jsx(LangSelect, {
        onSelect: setLanguage,
        value: language.toLowerCase()
      }) : /*#__PURE__*/_jsxs(Flexbox, {
        align: 'center',
        className: 'languageTitle',
        gap: 4,
        horizontal: true,
        children: [icon || /*#__PURE__*/_jsx(MaterialFileTypeIcon, {
          fallbackUnknownType: false,
          filename: filetype,
          size: 18,
          type: 'file',
          variant: 'raw'
        }), /*#__PURE__*/_jsx(Text, {
          ellipsis: true,
          fontSize: 13,
          children: displayName
        })]
      }), /*#__PURE__*/_jsx(Flexbox, {
        align: 'center',
        flex: 'none',
        gap: 4,
        horizontal: true,
        children: actions
      })]
    }), /*#__PURE__*/_jsx(Flexbox, {
      className: bodyVariants({
        expand: expand
      }),
      children: children
    })]
  }));
});
export default HighlighterFullFeatured;