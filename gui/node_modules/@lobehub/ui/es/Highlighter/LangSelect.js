'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure " + obj); }
import { Select } from 'antd';
import { memo, useMemo } from 'react';
import { Flexbox } from 'react-layout-kit';
import { bundledLanguagesInfo } from 'shiki';
import MaterialFileTypeIcon from "../MaterialFileTypeIcon";
import Text from "../Text";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export var LangSelect = /*#__PURE__*/memo(function (_ref) {
  var rest = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));
  var _useStyles = useStyles(),
    styles = _useStyles.styles;
  var options = useMemo(function () {
    return [{
      aliases: ['text', 'txt'],
      label: /*#__PURE__*/_jsxs(Flexbox, {
        align: 'center',
        gap: 4,
        horizontal: true,
        children: [/*#__PURE__*/_jsx(MaterialFileTypeIcon, {
          fallbackUnknownType: false,
          filename: "*.txt",
          size: 18,
          type: 'file',
          variant: 'raw'
        }), /*#__PURE__*/_jsx(Text, {
          ellipsis: true,
          fontSize: 13,
          children: "Plaintext"
        })]
      }),
      value: 'plaintext'
    }].concat(_toConsumableArray(bundledLanguagesInfo.map(function (item) {
      var _item$aliases;
      return {
        aliases: item.aliases,
        label: /*#__PURE__*/_jsxs(Flexbox, {
          align: 'center',
          gap: 4,
          horizontal: true,
          children: [/*#__PURE__*/_jsx(MaterialFileTypeIcon, {
            fallbackUnknownType: false,
            filename: "*.".concat((item === null || item === void 0 || (_item$aliases = item.aliases) === null || _item$aliases === void 0 ? void 0 : _item$aliases[0]) || item.id),
            size: 18,
            type: 'file',
            variant: 'raw'
          }), /*#__PURE__*/_jsx(Text, {
            ellipsis: true,
            fontSize: 13,
            children: item.name
          })]
        }),
        title: (item.aliases || [item.id]).filter(Boolean).map(function (item) {
          return "*.".concat(item);
        }).join(','),
        value: item.id
      };
    })));
  }, []);
  return /*#__PURE__*/_jsx(Select, _objectSpread({
    className: styles.select,
    options: options,
    showSearch: true,
    size: 'small',
    suffixIcon: false,
    variant: 'borderless'
  }, rest));
});
export default LangSelect;