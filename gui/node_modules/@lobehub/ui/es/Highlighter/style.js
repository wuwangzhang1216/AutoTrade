var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref) {
  var token = _ref.token,
    css = _ref.css,
    cx = _ref.cx,
    prefixCls = _ref.prefixCls,
    stylish = _ref.stylish;
  var prefix = "".concat(prefixCls, "-highlighter");
  var actionsHoverCls = "".concat(prefix, "-highlighter-hover-actions");
  var langHoverCls = "".concat(prefix, "-highlighter-hover-lang");
  var expandCls = "".concat(prefix, "-highlighter-body-expand");
  return {
    actions: cx(actionsHoverCls, css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n        position: absolute;\n        z-index: 2;\n        inset-block-start: 8px;\n        inset-inline-end: 8px;\n\n        opacity: 0;\n      "])))),
    bodyCollapsed: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      height: 0;\n      opacity: 0;\n    "]))),
    bodyExpand: cx(expandCls),
    bodyRoot: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      overflow: hidden;\n      transition: opacity 0.25s ", ";\n    "])), token.motionEaseOut),
    borderless: stylish.variantBorderlessWithoutHover,
    filled: stylish.variantFilledWithoutHover,
    headerBorderless: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n      padding-inline: 0;\n    "]))),
    headerFilled: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n      background: ", ";\n    "])), token.colorFillQuaternary),
    headerOutlined: css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n      & + .", " {\n        border-block-start: 1px solid ", ";\n      }\n    "])), expandCls, token.colorFillQuaternary),
    headerRoot: css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n      position: relative;\n      padding: 4px;\n\n      .languageTitle {\n        opacity: 0.5;\n        transition: opacity 0.2s ", ";\n      }\n\n      &:hover {\n        .languageTitle {\n          opacity: 1;\n        }\n      }\n    "])), token.motionEaseInOut),
    lang: cx(langHoverCls, stylish.blur, css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n        position: absolute;\n        z-index: 2;\n        inset-block-end: 8px;\n        inset-inline-end: 8px;\n\n        font-family: ", ";\n        color: ", ";\n\n        opacity: 0;\n        background: ", ";\n\n        transition: opacity 0.1s;\n      "])), token.fontFamilyCode, token.colorTextSecondary, token.colorFillQuaternary)),
    nowrap: css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n      pre,\n      code {\n        text-wrap: nowrap;\n      }\n    "]))),
    outlined: stylish.variantOutlinedWithoutHover,
    root: cx(prefix, css(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n        position: relative;\n\n        overflow: hidden;\n\n        width: 100%;\n        border-radius: ", "px;\n\n        transition: background-color 100ms ", ";\n\n        &:hover {\n          .", " {\n            opacity: 1;\n          }\n\n          .", " {\n            opacity: 1;\n          }\n        }\n\n        code {\n          background: transparent !important;\n        }\n      "])), token.borderRadius, token.motionEaseOut, actionsHoverCls, langHoverCls)),
    select: css(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n      user-select: none;\n\n      position: absolute;\n      inset-inline-start: 50%;\n      transform: translateX(-50%);\n\n      min-width: 100px;\n\n      font-size: 14px;\n      color: ", ";\n      text-align: center;\n    "])), token.colorTextDescription),
    shadow: stylish.shadow,
    wrap: css(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\n      pre,\n      code {\n        text-wrap: wrap;\n      }\n    "])))
  };
});