var _templateObject, _templateObject2, _templateObject3;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    stylish = _ref.stylish,
    token = _ref.token;
  return {
    borderless: stylish.variantBorderlessWithoutHover,
    container: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      padding: 0;\n      list-style: none;\n    "]))),
    filled: stylish.variantFilledWithoutHover,
    item: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      overflow: hidden;\n      box-sizing: border-box;\n      list-style: none;\n      border-radius: ", "px;\n    "])), token.borderRadius),
    itemVariant: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      padding-block: 4px;\n      padding-inline: 4px 16px;\n    "]))),
    outlined: stylish.variantOutlinedWithoutHover
  };
});