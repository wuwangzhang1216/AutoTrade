var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
import { rgba } from 'polished';
export var useStyles = createStyles(function (_ref, _ref2) {
  var token = _ref.token,
    css = _ref.css,
    stylish = _ref.stylish,
    prefixCls = _ref.prefixCls;
  var fullscreen = _ref2.fullscreen,
    headerHeight = _ref2.headerHeight;
  return {
    container: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n        cursor: pointer;\n        width: ", "px;\n        height: ", "px;\n        border-radius: ", "px;\n      "])), token.controlHeight, token.controlHeight, token.borderRadius),
    drawer: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n        &.", "-drawer-content {\n          background: transparent;\n        }\n\n        .", "-drawer-body {\n          display: flex;\n          flex-direction: column;\n        }\n      "])), prefixCls, prefixCls),
    drawerRoot: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n        inset-block-start: ", "px;\n\n        :focus-visible {\n          outline: none;\n        }\n\n        .", "-drawer {\n          &-mask {\n            ", ";\n            background-color: ", ";\n          }\n\n          &-content-wrapper {\n            box-shadow: none;\n          }\n        }\n      "])), fullscreen ? 0 : headerHeight + 1, prefixCls, stylish.blur, rgba(token.colorBgLayout, 0.5)),
    fillRect: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n        flex: 1;\n        width: 100%;\n        border-block-start: none;\n      "]))),
    menu: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n        padding-block-start: ", "px;\n        background: transparent;\n        border-inline-end: transparent !important;\n\n        > .", "-menu-item-only-child, .", "-menu-submenu-title {\n          width: 100%;\n          margin: 0 !important;\n          border-block-start: none;\n          border-radius: 0;\n\n          &:active {\n            color: ", ";\n            background-color: ", ";\n          }\n        }\n\n        .", "-menu-item-only-child:first-child {\n          border-block-start: none;\n        }\n\n        .", "-menu-submenu-title[aria-expanded='true'] {\n          a {\n            font-weight: 600;\n            color: ", " !important;\n          }\n        }\n\n        .", "-menu-item-group-title {\n          padding-block: 8px;\n\n          font-size: 12px;\n          font-weight: 500;\n          line-height: 1;\n          text-overflow: ellipsis;\n          text-transform: uppercase;\n          white-space: nowrap;\n\n          background: ", ";\n        }\n\n        .", "-menu-item {\n          width: calc(100% - 16px) !important;\n          margin: 8px !important;\n          border-radius: ", "px;\n\n          &:hover,\n          &:active {\n            color: ", " !important;\n            background: ", " !important;\n          }\n        }\n\n        .", "-menu-item-active {\n          width: calc(100% - 16px) !important;\n          margin: 8px !important;\n          background: ", ";\n          border-radius: ", "px;\n        }\n\n        .", "-menu-item-selected {\n          font-weight: 600;\n          color: ", ";\n          background: ", ";\n\n          &:hover,\n          &:active {\n            color: ", " !important;\n            background: ", " !important;\n          }\n        }\n      "])), fullscreen ? headerHeight : 0, prefixCls, prefixCls, token.colorText, token.colorFill, prefixCls, prefixCls, token.colorText, prefixCls, token.colorFillSecondary, prefixCls, token.borderRadius, token.colorText, token.colorFillSecondary, prefixCls, token.colorFillSecondary, token.borderRadius, prefixCls, token.colorBgLayout, token.colorText, token.colorBgLayout, token.colorText)
  };
});