'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["type", "size", "style", "extra", "className"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { useTheme } from 'antd-style';
import { memo } from 'react';
import { Flexbox } from 'react-layout-kit';
import LogoText from "../LobeHubText";
import Logo3d from "../Logo3d";
import LogoFlat from "../LogoFlat";
import LogoMono from "../LogoMono";
import Divider from "../components/Divider";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var LobeHub = /*#__PURE__*/memo(function (_ref) {
  var _ref$type = _ref.type,
    type = _ref$type === void 0 ? '3d' : _ref$type,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 32 : _ref$size,
    style = _ref.style,
    extra = _ref.extra,
    className = _ref.className,
    rest = _objectWithoutProperties(_ref, _excluded);
  var theme = useTheme();
  var _useStyles = useStyles(),
    styles = _useStyles.styles;
  var logoComponent;
  switch (type) {
    case '3d':
      {
        logoComponent = /*#__PURE__*/_jsx(Logo3d, _objectSpread({
          size: size
        }, rest));
        break;
      }
    case 'flat':
      {
        logoComponent = /*#__PURE__*/_jsx(LogoFlat, {
          size: size,
          style: style
        });
        break;
      }
    case 'mono':
      {
        logoComponent = /*#__PURE__*/_jsx(LogoMono, {
          size: size,
          style: style
        });
        break;
      }
    case 'text':
      {
        logoComponent = /*#__PURE__*/_jsx(LogoText, _objectSpread({
          className: className,
          size: size,
          style: style
        }, rest));
        break;
      }
    case 'combine':
      {
        logoComponent = /*#__PURE__*/_jsxs(_Fragment, {
          children: [/*#__PURE__*/_jsx(Logo3d, {
            alt: "LobeChat",
            size: size
          }), /*#__PURE__*/_jsx(LogoText, {
            size: size,
            style: {
              marginLeft: Math.round(size / 4)
            }
          })]
        });
        if (!extra) logoComponent = /*#__PURE__*/_jsx(Flexbox, {
          align: 'center',
          className: className,
          flex: 'none',
          horizontal: true,
          style: style,
          children: logoComponent
        });
        break;
      }
  }
  if (!extra) return logoComponent;
  var extraSize = Math.round(size / 3 * 1.9);
  return /*#__PURE__*/_jsxs(Flexbox, _objectSpread(_objectSpread({
    align: 'center',
    className: className,
    flex: 'none',
    horizontal: true,
    style: style
  }, rest), {}, {
    children: [logoComponent, /*#__PURE__*/_jsx(Divider, {
      size: extraSize,
      style: {
        color: theme.colorFill
      }
    }), /*#__PURE__*/_jsx("div", {
      className: styles.extraTitle,
      style: {
        fontSize: extraSize
      },
      children: extra
    })]
  }));
});
LobeHub.displayName = 'LobeHubBrand';
export default LobeHub;