import { type CSSProperties, type Ref } from 'react';
import { FlexboxProps } from 'react-layout-kit';
import type { VideoProps as VProps } from "../types";
export interface VideoProps extends VProps, Pick<FlexboxProps, 'width' | 'height'> {
    autoPlay?: boolean;
    classNames?: {
        mask?: string;
        video?: string;
        wrapper?: string;
    };
    isLoading?: boolean;
    loop?: boolean;
    maxHeight?: number | string;
    maxWidth?: number | string;
    minHeight?: number | string;
    minWidth?: number | string;
    muted?: HTMLVideoElement['muted'];
    onEnded?: VProps['onEnded'];
    onMouseEnter?: VProps['onMouseEnter'];
    onMouseLeave?: VProps['onMouseLeave'];
    onPause?: VProps['onPause'];
    onPlay?: VProps['onPlay'];
    onPlaying?: VProps['onPlaying'];
    onProgress?: VProps['onProgress'];
    poster?: string;
    preload?: HTMLVideoElement['preload'];
    preview?: boolean;
    ref?: Ref<HTMLDivElement>;
    size?: number | string;
    src: string;
    styles?: {
        mask?: CSSProperties;
        video?: CSSProperties;
        wrapper?: CSSProperties;
    };
    variant?: 'borderless' | 'filled' | 'outlined';
}
declare const Video: import("react").NamedExoticComponent<VideoProps>;
export default Video;
