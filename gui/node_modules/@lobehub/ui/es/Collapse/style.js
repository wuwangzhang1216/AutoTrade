var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var DEFAULT_PADDING = '12px 16px';
export var getPadding = function getPadding(padding) {
  return !padding && padding !== 0 ? DEFAULT_PADDING : "".concat(typeof padding === 'string' ? padding : "".concat(padding, "px"), " !important");
};
export var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    token = _ref.token,
    prefixCls = _ref.prefixCls,
    stylish = _ref.stylish,
    isDarkMode = _ref.isDarkMode;
  return {
    borderless: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      &.", "-collapse {\n        .", "-collapse-header {\n          padding-inline: 0;\n        }\n        .", "-collapse-content {\n          padding-inline: 0;\n          .", "-collapse-content-box {\n            padding-inline: 0;\n          }\n        }\n      }\n    "])), prefixCls, prefixCls, prefixCls, prefixCls),
    desc: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      font-size: 12px;\n      color: ", ";\n    "])), token.colorTextDescription),
    filled: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      &.", "-collapse {\n        .", "-collapse-item {\n          background: ", ";\n          .", "-collapse-content {\n            margin-inline: 3px;\n            margin-block-end: 3px;\n            border-radius: ", "px;\n            ", ";\n            background: ", ";\n            ", ";\n          }\n        }\n      }\n    "])), prefixCls, prefixCls, isDarkMode ? token.colorFillQuaternary : token.colorFillTertiary, prefixCls, token.borderRadius, stylish.variantOutlinedWithoutHover, isDarkMode ? token.colorFillQuaternary : token.colorBgContainer, isDarkMode ? undefined : stylish.shadow),
    gapOutlined: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n      &.", "-collapse {\n        background: transparent;\n        .", "-collapse-item {\n          border: 1px solid ", ";\n          background: ", ";\n        }\n\n        .", "-collapse-item:not(:first-child) {\n          .", "-collapse-header {\n            border-block-start: none;\n          }\n        }\n      }\n    "])), prefixCls, prefixCls, token.colorFillSecondary, token.colorBgContainer, prefixCls, prefixCls),
    gapRoot: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n      &.", "-collapse {\n        display: flex;\n        flex-direction: column;\n        border: none;\n        box-shadow: none;\n        .", "-collapse-item {\n          border: none;\n          border-radius: ", "px;\n        }\n      }\n    "])), prefixCls, prefixCls, token.borderRadiusLG),
    hideCollapsibleIcon: css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n      .", "-collapse-expand-icon {\n        display: none !important;\n      }\n    "])), prefixCls),
    icon: css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n      cursor: pointer;\n      transition: all 100ms ", ";\n    "])), token.motionEaseOut),
    outlined: css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n      &.", "-collapse {\n        border: 1px solid ", ";\n        background: ", ";\n        .", "-collapse-item .", "-collapse-header {\n          transition: none;\n        }\n        .", "-collapse-item-active .", "-collapse-header {\n          border-block-end: 1px solid ", ";\n        }\n        .", "-collapse-item:not(:first-child) {\n          .", "-collapse-header {\n            border-block-start: 1px solid ", ";\n          }\n        }\n      }\n    "])), prefixCls, token.colorFillSecondary, token.colorBgContainer, prefixCls, prefixCls, prefixCls, prefixCls, token.colorFillTertiary, prefixCls, prefixCls, token.colorFillTertiary),
    root: css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n      &.", "-collapse {\n        display: flex;\n        flex-direction: column;\n        background: transparent;\n\n        .", "-collapse-header {\n          overflow: hidden;\n          display: flex;\n          flex: none;\n          gap: 0.75em;\n          align-items: flex-start;\n\n          border-radius: 0 !important;\n\n          .", "-collapse-header-text {\n            flex: 1;\n          }\n\n          .", "-collapse-expand-icon {\n            align-items: center;\n            min-height: 28px;\n            padding: 0;\n          }\n\n          .", "-collapse-extra {\n            display: flex;\n            align-items: center;\n            min-height: 28px;\n          }\n        }\n\n        .", "-collapse-content {\n          background: transparent;\n        }\n      }\n    "])), prefixCls, prefixCls, prefixCls, prefixCls, prefixCls, prefixCls),
    title: css(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n      font-size: 16px;\n      font-weight: 500;\n      line-height: 28px;\n    "])))
  };
});