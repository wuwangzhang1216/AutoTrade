'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["items", "max", "gap", "variant", "bordered", "shadow", "size", "background", "animation", "draggable", "classNames", "shape", "styles", "onClick", "ref", "zIndexReverse"],
  _excluded2 = ["key", "style", "className"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { memo } from 'react';
import { Flexbox } from 'react-layout-kit';
import Avatar from "../Avatar";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var AvatarGroup = /*#__PURE__*/memo(function (_ref) {
  var items = _ref.items,
    max = _ref.max,
    gap = _ref.gap,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'borderless' : _ref$variant,
    bordered = _ref.bordered,
    shadow = _ref.shadow,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 48 : _ref$size,
    background = _ref.background,
    animation = _ref.animation,
    draggable = _ref.draggable,
    classNames = _ref.classNames,
    shape = _ref.shape,
    customStyles = _ref.styles,
    _onClick = _ref.onClick,
    ref = _ref.ref,
    zIndexReverse = _ref.zIndexReverse,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useStyles = useStyles(),
    cx = _useStyles.cx,
    styles = _useStyles.styles,
    theme = _useStyles.theme;
  var avatars = max ? items.slice(0, max) : items;
  var restAvatars = items.slice(max, items.length);
  var gapValue = gap !== null && gap !== void 0 ? gap : Math.floor(-size / 4);
  var avatarProps = {
    animation: animation,
    background: background,
    bordered: bordered,
    draggable: draggable,
    shadow: shadow,
    shape: shape,
    size: size,
    variant: variant
  };
  return /*#__PURE__*/_jsxs(Flexbox, _objectSpread(_objectSpread({
    gap: gap,
    horizontal: true,
    ref: ref,
    style: {
      position: 'relative'
    }
  }, rest), {}, {
    children: [avatars.map(function (avatar, index) {
      var key = avatar.key,
        avatarStyle = avatar.style,
        avatarClassName = avatar.className,
        restAvatarProps = _objectWithoutProperties(avatar, _excluded2);
      return /*#__PURE__*/_jsx(Avatar, _objectSpread(_objectSpread({
        className: cx(classNames === null || classNames === void 0 ? void 0 : classNames.avatar, avatarClassName, styles.avatar),
        onClick: function onClick() {
          return _onClick === null || _onClick === void 0 ? void 0 : _onClick({
            item: avatar,
            key: key
          });
        },
        style: _objectSpread(_objectSpread({
          marginLeft: index === 0 ? 0 : gapValue,
          zIndex: zIndexReverse ? items.length - index : index
        }, customStyles === null || customStyles === void 0 ? void 0 : customStyles.avatar), avatarStyle)
      }, avatarProps), restAvatarProps), key);
    }), max && restAvatars.length > 0 && /*#__PURE__*/_jsx(Avatar, _objectSpread(_objectSpread({}, avatarProps), {}, {
      avatar: "+".concat(restAvatars.length),
      background: theme.colorText,
      className: cx(styles.avatar, styles.count, classNames === null || classNames === void 0 ? void 0 : classNames.count),
      sliceText: false,
      style: _objectSpread({
        marginLeft: gapValue,
        zIndex: zIndexReverse ? 0 : avatars.length
      }, customStyles === null || customStyles === void 0 ? void 0 : customStyles.count)
    }))]
  }));
});
AvatarGroup.displayName = 'AvatarGroup';
export default AvatarGroup;