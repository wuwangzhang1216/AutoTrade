var _templateObject, _templateObject2;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    token = _ref.token,
    prefixCls = _ref.prefixCls;
  return {
    avatar: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      box-shadow: 0 0 0 2px ", ";\n\n      &:hover {\n        transform: translateY(-10%);\n      }\n    "])), token.colorBgLayout),
    count: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      &.", "-avatar {\n        background: ", ";\n        > .", "-avatar-string {\n          transform: scale(0.8) !important;\n          color: ", ";\n        }\n      }\n    "])), prefixCls, token.colorText, prefixCls, token.colorBgLayout)
  };
});