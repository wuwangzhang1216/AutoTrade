'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["fullFeatured", "fileName", "allowChangeLanguage", "language", "children", "className", "style", "variant", "icon", "theme"],
  _excluded2 = ["language", "children", "className", "style", "variant"],
  _excluded3 = ["fullFeatured", "children", "className", "style", "variant", "theme"];
var _templateObject;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
import Highlighter from "../../Highlighter";
import { FALLBACK_LANG } from "../../Highlighter/const";
import Mermaid from "../../Mermaid";
import Snippet from "../../Snippet";
import { jsx as _jsx } from "react/jsx-runtime";
var useStyles = createStyles(function (_ref) {
  var css = _ref.css;
  return {
    container: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    overflow: hidden;\n    margin-block: calc(var(--lobe-markdown-margin-multiple) * 0.5em);\n    border-radius: calc(var(--lobe-markdown-border-radius) * 1px);\n    box-shadow: 0 0 0 1px var(--lobe-markdown-border-color) inset;\n  "])))
  };
});
export var Pre = function Pre(_ref2) {
  var fullFeatured = _ref2.fullFeatured,
    fileName = _ref2.fileName,
    allowChangeLanguage = _ref2.allowChangeLanguage,
    _ref2$language = _ref2.language,
    language = _ref2$language === void 0 ? FALLBACK_LANG : _ref2$language,
    children = _ref2.children,
    className = _ref2.className,
    style = _ref2.style,
    _ref2$variant = _ref2.variant,
    variant = _ref2$variant === void 0 ? 'filled' : _ref2$variant,
    icon = _ref2.icon,
    theme = _ref2.theme,
    rest = _objectWithoutProperties(_ref2, _excluded);
  var _useStyles = useStyles(),
    styles = _useStyles.styles,
    cx = _useStyles.cx;
  return /*#__PURE__*/_jsx(Highlighter, _objectSpread(_objectSpread({
    allowChangeLanguage: allowChangeLanguage,
    className: cx(styles.container, className),
    fileName: fileName,
    fullFeatured: fullFeatured,
    icon: icon,
    language: language,
    style: style,
    theme: theme,
    variant: variant
  }, rest), {}, {
    children: children
  }));
};
export var PreSingleLine = function PreSingleLine(_ref3) {
  var _ref3$language = _ref3.language,
    language = _ref3$language === void 0 ? FALLBACK_LANG : _ref3$language,
    children = _ref3.children,
    className = _ref3.className,
    style = _ref3.style,
    _ref3$variant = _ref3.variant,
    variant = _ref3$variant === void 0 ? 'filled' : _ref3$variant,
    rest = _objectWithoutProperties(_ref3, _excluded2);
  var _useStyles2 = useStyles(),
    cx = _useStyles2.cx,
    styles = _useStyles2.styles;
  return /*#__PURE__*/_jsx(Snippet, _objectSpread(_objectSpread({
    className: cx(styles.container, className),
    "data-code-type": "highlighter",
    language: language,
    style: style,
    variant: variant
  }, rest), {}, {
    children: children
  }));
};
export var PreMermaid = function PreMermaid(_ref4) {
  var fullFeatured = _ref4.fullFeatured,
    children = _ref4.children,
    className = _ref4.className,
    style = _ref4.style,
    _ref4$variant = _ref4.variant,
    variant = _ref4$variant === void 0 ? 'filled' : _ref4$variant,
    theme = _ref4.theme,
    rest = _objectWithoutProperties(_ref4, _excluded3);
  var _useStyles3 = useStyles(),
    styles = _useStyles3.styles,
    cx = _useStyles3.cx;
  return /*#__PURE__*/_jsx(Mermaid, _objectSpread(_objectSpread({
    className: cx(styles.container, className),
    fullFeatured: fullFeatured,
    style: style,
    theme: theme,
    variant: variant
  }, rest), {}, {
    children: children
  }));
};
Pre.displayName = 'MdxPre';
export default Pre;