'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["classNames", "className", "style", "closable", "styles", "allowFullscreen", "title", "afterOpenChange", "width", "onCancel", "centered", "open", "afterClose", "destroyOnHidden", "closeIcon", "paddings", "height", "enableResponsive", "zIndex", "mask", "getContainer", "keyboard", "focusTriggerAfterClose", "forceRender", "loading", "footer", "submitButtonProps", "submitLoading", "onFinish", "submitText", "variant", "gap", "onSubmit", "children", "ref"],
  _excluded2 = ["form", "footer"],
  _excluded3 = ["form"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { useResponsive } from 'antd-style';
import { memo } from 'react';
import { Flexbox } from 'react-layout-kit';
import Button from "../Button";
import Form from "../Form";
import Modal from "../Modal";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
var FormModal = /*#__PURE__*/memo(function (_ref) {
  var _ref$classNames = _ref.classNames,
    classNames = _ref$classNames === void 0 ? {} : _ref$classNames,
    className = _ref.className,
    style = _ref.style,
    closable = _ref.closable,
    _ref$styles = _ref.styles,
    styles = _ref$styles === void 0 ? {} : _ref$styles,
    allowFullscreen = _ref.allowFullscreen,
    title = _ref.title,
    afterOpenChange = _ref.afterOpenChange,
    width = _ref.width,
    onCancel = _ref.onCancel,
    centered = _ref.centered,
    open = _ref.open,
    afterClose = _ref.afterClose,
    destroyOnHidden = _ref.destroyOnHidden,
    closeIcon = _ref.closeIcon,
    paddings = _ref.paddings,
    height = _ref.height,
    enableResponsive = _ref.enableResponsive,
    zIndex = _ref.zIndex,
    mask = _ref.mask,
    getContainer = _ref.getContainer,
    keyboard = _ref.keyboard,
    focusTriggerAfterClose = _ref.focusTriggerAfterClose,
    forceRender = _ref.forceRender,
    loading = _ref.loading,
    footer = _ref.footer,
    submitButtonProps = _ref.submitButtonProps,
    submitLoading = _ref.submitLoading,
    onFinish = _ref.onFinish,
    submitText = _ref.submitText,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'borderless' : _ref$variant,
    gap = _ref.gap,
    onSubmit = _ref.onSubmit,
    children = _ref.children,
    ref = _ref.ref,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useResponsive = useResponsive(),
    mobile = _useResponsive.mobile;
  var _useStyles = useStyles(),
    cx = _useStyles.cx,
    s = _useStyles.styles;
  var formClassName = classNames.form,
    footerClassName = classNames.footer,
    modalClassNames = _objectWithoutProperties(classNames, _excluded2);
  var formStyle = styles.form,
    modalStyles = _objectWithoutProperties(styles, _excluded3);
  return /*#__PURE__*/_jsx(Modal, {
    afterClose: afterClose,
    afterOpenChange: afterOpenChange,
    allowFullscreen: allowFullscreen,
    centered: centered,
    className: className,
    classNames: modalClassNames,
    closable: closable,
    closeIcon: closeIcon,
    confirmLoading: submitLoading,
    destroyOnHidden: destroyOnHidden,
    enableResponsive: enableResponsive,
    focusTriggerAfterClose: focusTriggerAfterClose,
    footer: null,
    forceRender: forceRender,
    getContainer: getContainer,
    height: height,
    keyboard: keyboard,
    loading: loading,
    mask: mask,
    onCancel: onCancel,
    open: open,
    paddings: paddings,
    style: style,
    styles: _objectSpread(_objectSpread({}, modalStyles), {}, {
      body: _objectSpread({
        paddingTop: mobile ? 0 : undefined
      }, modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.body)
    }),
    title: title,
    width: width,
    zIndex: zIndex,
    children: /*#__PURE__*/_jsx(Form, _objectSpread(_objectSpread({
      className: cx(s.form, formClassName),
      clearOnDestroy: destroyOnHidden,
      footer: /*#__PURE__*/_jsx(Flexbox, {
        align: 'center',
        className: cx(s.footer, footerClassName),
        gap: 8,
        horizontal: true,
        children: footer || /*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({
          block: true,
          htmlType: "submit",
          loading: submitLoading,
          onClick: onSubmit,
          type: 'primary'
        }, submitButtonProps), {}, {
          style: _objectSpread({
            flex: 1
          }, submitButtonProps === null || submitButtonProps === void 0 ? void 0 : submitButtonProps.style),
          children: submitText || 'Submit'
        }))
      }),
      gap: gap || (variant === 'borderless' ? 24 : gap),
      onFinish: onFinish,
      ref: ref,
      style: _objectSpread({
        paddingBottom: 56
      }, formStyle),
      styles: {
        title: {
          fontSize: 14
        }
      },
      variant: variant
    }, rest), {}, {
      children: children
    }))
  });
});
FormModal.displayName = 'FormModal';
export default FormModal;