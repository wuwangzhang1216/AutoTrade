'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["desc", "tag", "minWidth", "avatar", "className", "label", "children", "divider", "layout", "variant"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { Form } from 'antd';
import { cva } from 'class-variance-authority';
import { memo, useMemo } from 'react';
import { useItemStyles as useStyles } from "../style";
import FormDivider from "./FormDivider";
import FormTitle from "./FormTitle";
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var Item = Form.Item;
var FormItem = /*#__PURE__*/memo(function (_ref) {
  var desc = _ref.desc,
    tag = _ref.tag,
    minWidth = _ref.minWidth,
    avatar = _ref.avatar,
    className = _ref.className,
    label = _ref.label,
    children = _ref.children,
    divider = _ref.divider,
    layout = _ref.layout,
    variant = _ref.variant,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useStyles = useStyles({
      minWidth: minWidth
    }),
    cx = _useStyles.cx,
    styles = _useStyles.styles;
  var variants = useMemo(function () {
    return cva(styles.root, {
      defaultVariants: {
        divider: false,
        itemMinWidth: false,
        layout: 'vertical'
      },
      /* eslint-disable sort-keys-fix/sort-keys-fix */
      variants: {
        itemMinWidth: {
          true: styles.itemMinWidth,
          false: null
        },
        divider: {
          true: null,
          false: styles.itemNoDivider
        },
        layout: {
          vertical: styles.verticalLayout,
          horizontal: null
        }
      }
      /* eslint-enable sort-keys-fix/sort-keys-fix */
    });
  }, [styles]);
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [divider && /*#__PURE__*/_jsx(FormDivider, {
      visible: variant !== 'borderless'
    }), /*#__PURE__*/_jsx(Item, _objectSpread(_objectSpread({
      className: cx(variants({
        divider: divider,
        itemMinWidth: Boolean(minWidth),
        layout: layout
      }), className),
      label: /*#__PURE__*/_jsx(FormTitle, {
        avatar: avatar,
        desc: desc,
        tag: tag,
        title: label
      }),
      layout: layout
    }, rest), {}, {
      children: children
    }))]
  });
});
FormItem.displayName = 'FormItem';
export default FormItem;