'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["items", "renderItem", "maxItemWidth", "className", "columns", "gap", "style", "size", "borderRadius", "spotlight"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { memo, useEffect, useRef } from 'react';
import Grid from "../../Grid";
import SpotlightCardItem from "./SpotlightCardItem";
import { CHILDREN_CLASSNAME, useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
var SpotlightCard = /*#__PURE__*/memo(function (_ref) {
  var items = _ref.items,
    Content = _ref.renderItem,
    maxItemWidth = _ref.maxItemWidth,
    className = _ref.className,
    _ref$columns = _ref.columns,
    columns = _ref$columns === void 0 ? 3 : _ref$columns,
    _ref$gap = _ref.gap,
    gap = _ref$gap === void 0 ? '1em' : _ref$gap,
    style = _ref.style,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 800 : _ref$size,
    _ref$borderRadius = _ref.borderRadius,
    borderRadius = _ref$borderRadius === void 0 ? 12 : _ref$borderRadius,
    _ref$spotlight = _ref.spotlight,
    spotlight = _ref$spotlight === void 0 ? true : _ref$spotlight,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useStyles = useStyles({
      borderRadius: borderRadius,
      size: size
    }),
    styles = _useStyles.styles,
    cx = _useStyles.cx;
  var ref = useRef(null);
  useEffect(function () {
    if (!ref.current) return;
    if (!spotlight) return;
    var fn = function fn(e) {
      var _iterator = _createForOfIteratorHelper(document.querySelectorAll(".".concat(CHILDREN_CLASSNAME))),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var card = _step.value;
          var rect = card.getBoundingClientRect(),
            x = e.clientX - rect.left,
            y = e.clientY - rect.top;
          card.style.setProperty('--mouse-x', "".concat(x, "px"));
          card.style.setProperty('--mouse-y', "".concat(y, "px"));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    };
    ref.current.addEventListener('mousemove', fn);
    return function () {
      var _ref$current;
      (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.removeEventListener('mousemove', fn);
    };
  }, []);
  return /*#__PURE__*/_jsx(Grid, _objectSpread(_objectSpread({
    className: cx(styles.container, styles.grid, className),
    gap: gap,
    maxItemWidth: maxItemWidth,
    ref: ref,
    rows: columns,
    style: style
  }, rest), {}, {
    children: items.map(function (item, index) {
      return /*#__PURE__*/_jsx(SpotlightCardItem, {
        borderRadius: borderRadius,
        className: CHILDREN_CLASSNAME,
        size: size,
        children: /*#__PURE__*/_jsx(Content, _objectSpread({}, item))
      }, index);
    })
  }));
});
SpotlightCard.displayName = 'SpotlightCard';
export default SpotlightCard;