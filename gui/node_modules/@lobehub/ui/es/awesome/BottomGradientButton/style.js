var _templateObject;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref) {
  var cx = _ref.cx,
    stylish = _ref.stylish,
    css = _ref.css,
    token = _ref.token;
  return cx(stylish.resetLinkColor, css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      overflow: hidden;\n      font-weight: bold;\n      color: ", ";\n      transition: all 0.2s ease-in-out;\n\n      &::before {\n        content: '';\n\n        position: absolute;\n        inset-block-end: 0;\n\n        display: block;\n\n        width: 50%;\n        height: 1px;\n\n        opacity: 0;\n        background-image: linear-gradient(to right, transparent, ", ", transparent);\n\n        transition: all 0.2s ease-in-out;\n      }\n\n      &:hover {\n        &::before {\n          opacity: 1;\n        }\n      }\n    "])), token.colorTextSecondary, token.gold));
});