function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["ref", "leftAddons", "rightAddons", "texts", "onSend", "loading", "onStop"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { useTheme } from 'antd-style';
import { ArrowBigUp, CornerDownLeft, Loader2 } from 'lucide-react';
import { memo } from 'react';
import { Flexbox } from 'react-layout-kit';
import Button from "../../../Button";
import Icon from "../../../Icon";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var ChatSendButton = /*#__PURE__*/memo(function (_ref) {
  var ref = _ref.ref,
    leftAddons = _ref.leftAddons,
    rightAddons = _ref.rightAddons,
    texts = _ref.texts,
    onSend = _ref.onSend,
    loading = _ref.loading,
    onStop = _ref.onStop,
    rest = _objectWithoutProperties(_ref, _excluded);
  var theme = useTheme();
  return /*#__PURE__*/_jsxs(Flexbox, _objectSpread(_objectSpread({
    align: 'end',
    distribution: 'space-between',
    flex: 'none',
    gap: 8,
    horizontal: true,
    paddingInline: 16,
    ref: ref
  }, rest), {}, {
    children: [/*#__PURE__*/_jsx(Flexbox, {
      align: 'center',
      gap: 8,
      horizontal: true,
      children: leftAddons
    }), /*#__PURE__*/_jsxs(Flexbox, {
      align: 'center',
      gap: 8,
      horizontal: true,
      children: [/*#__PURE__*/_jsxs(Flexbox, {
        gap: 4,
        horizontal: true,
        style: {
          color: theme.colorTextDescription,
          fontSize: 12,
          marginRight: 12
        },
        children: [/*#__PURE__*/_jsx(Icon, {
          icon: CornerDownLeft
        }), /*#__PURE__*/_jsx("span", {
          children: (texts === null || texts === void 0 ? void 0 : texts.send) || 'Send'
        }), /*#__PURE__*/_jsx("span", {
          children: "/"
        }), /*#__PURE__*/_jsxs(Flexbox, {
          horizontal: true,
          children: [/*#__PURE__*/_jsx(Icon, {
            icon: ArrowBigUp
          }), /*#__PURE__*/_jsx(Icon, {
            icon: CornerDownLeft
          })]
        }), /*#__PURE__*/_jsx("span", {
          children: (texts === null || texts === void 0 ? void 0 : texts.warp) || 'Warp'
        })]
      }), rightAddons, loading ? /*#__PURE__*/_jsx(Button, {
        icon: loading && Loader2,
        onClick: onStop,
        children: (texts === null || texts === void 0 ? void 0 : texts.stop) || 'Stop'
      }) : /*#__PURE__*/_jsx(Button, {
        onClick: onSend,
        type: 'primary',
        children: (texts === null || texts === void 0 ? void 0 : texts.send) || 'Send'
      })]
    })]
  }));
});
ChatSendButton.displayName = 'ChatSendButton';
export default ChatSendButton;