var _templateObject, _templateObject2;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref) {
  var cx = _ref.cx,
    css = _ref.css,
    stylish = _ref.stylish,
    token = _ref.token;
  return {
    borderless: stylish.variantBorderlessWithoutHover,
    filled: cx(stylish.variantFilledWithoutHover, css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n        background: ", ";\n      "])), token.colorBgContainer)),
    outlined: stylish.variantOutlinedWithoutHover,
    root: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      position: relative;\n      border-radius: ", "px;\n    "])), token.borderRadius),
    shadow: stylish.shadow
  };
});